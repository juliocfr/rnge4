openapi: 3.0.0
servers:
  - url: 'https://homolog.rnge.com.br:8091/v2'
    description: Homologação
  - url: 'https://rnge.com.br:8091/v2'
    description: Produção
tags:
  - name: Agrupamentos (skugroups)
    description: Agrupamentos Comerciais
  - name: Categorias (categories)
    description: Categorias de produtos
  - name: Composição Sku (skuparts)
    description: Composição Sku
  - name: Conta despesa (expenseaccounts)
    description: Cadastro das contas de despesa
  - name: Distribuição (distributions)
    description: Distribuição para filiais
  - name: Empresas (companies)
    description: Cadastro de Empresas
  - name: Endereços de pessoas (addresses)
    description: Endereços de Pessoas
  - name: Entrada de NF (purchases)
    description: Entrada de NF de Compra
  - name: Estoque (skustocks)
    description: Controle de Estoque
  - name: Formas de Quitação (paymentcodes)
    description: Cadastro das formas de quitação
  - name: Fornecedores (suppliers)
    description: Cadastro de Fornecedores
  - name: Fotos de Produtos (productimages)
    description: Fotos de Produtos
  - name: Listas de Preços (pricelists)
    description: Listas de Preços
  - name: Login
    description: Login
  - name: Mapeamentos (purchasemappings)
    description: Mapeamentos Produto x Fornecedor
  - name: Marcas (brands)
    description: Cadastro das marcas dos produtos
  - name: Meios de Entrega (deliverytypes)
    description: Cadastro dos meios de entrega
  - name: Notas/Cupons Fiscais (invoices)
    description: Notas e Cupons Fiscais (NFe/NFCe)
  - name: Ordens de Compra (purchaseorders)
    description: Gestão de Ordens de Compra
  - name: PDV
    description: Equipamento PDV
  - name: Pedidos (orders)
    description: Gestão de Pedidos
  - name: Pedidos por SKU (orderchecks)
    description: Separação/Conferência de Pedidos
  - name: Pessoas (customercategories)
    description: Categorias de Pessoas
  - name: Pessoas (customers)
    description: Cadastro de Pessoas
  - name: Prédios de Estoque
    description: Cadastro dos prédios de estoque
  - name: Produtos (products)
    description: Cadastro de Produtos
  - name: Produtos (skuarticles)
    description: Cadastro de Mercadorias
  - name: Produtos (skuconfigs)
    description: Cadastro de configuração de SKU x Empresa
  - name: Produtos (skus)
    description: Cadastro de SKUs
  - name: Recepção de Nota (receptions)
    description: Recepção de Nota (RN)
  - name: Serviços (services)
    description: Cadastro de Serviços para NFSe
  - name: Transportadoras (carriers)
    description: Cadastro de Transportadoras/Entregadores
  - name: Tributária (Classe Fiscal)
    description: Cadastro das classes fiscais
  - name: Unidades de Medida (units)
    description: Unidades de Medida
info:
  license:
    name: Copyright (C) Rednaxel Informática
    url: 'https://rednaxel.com'
  description: |
    Utilizamos o **Authorization** de duas formas:
    - No `POST /login`, **Basic** com username = `usuario@tenant` e password = `senha`
    - Nos demais recursos utilizar **Bearer** `token` (obtido no login)

    ## Definições

    **Tenant\:** Conta do cliente na Rednaxel. O tenant pode ter uma ou empresas que podem ser filiais (mesma raiz de CNPJ) ou não.

    **Usuário\:** Cada usuário pertence a um tenant e tem um `user_id` global e um `nome_usuario` único dentro do tenant.

    ## Padrões

    Todos os GET usam os parâmetros "filter", "sort" e "range" da seguinte forma:

     | Parâmetro  | Formato | URL Query                              | SQL equivalente       |
     |------------|---------|----------------------------------------|-----------------------|
     | filter     |  JSON   | GET v2/resources?filter={"store":34}   | ... WHERE store = 34  |
     | sort       |  CSV    | GET v2/resources?sort=\["name","ASC"\] | ... ORDER BY name asc |
     | range      |  CSV    | GET v2/resources?range=\[0,9\]         | ... OFFSET 0 LIMIT 10 |


    Esta API utiliza o padrão REST e autenticação HTTP AuthBasic (RFC 7617) em todos os recursos. O formato padrão de requisição e resposta é o JSON na maioria dos recursos; as exceções são os que trabalham com Notas Fiscais (XML) ou documentos para impressão (PDF). Cuidado com a paginação: quando o `range` não for informado a API utilizará o padrão [0,99].
  version: 2.0.0
  title: API do RNGE 4
  termsOfService: 'https://rednaxel.com/termos-de-uso'
  contact:
    name: Suporte
    email: suporte@rednaxel.com
    url: 'https://suporte.rednaxel.com'
  x-logo:
    url: 'https://storage.googleapis.com/rednaxel-dados/rednaxel-264.png'
    altText: Logo da Rednaxel
paths:
  /login:
    parameters: []
    post:
      summary: Efetuando login
      operationId: post-login
      responses:
        '200':
          description: Os campos `user_id` e `token` devem ser usados nas chamadas seguintes.
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: 1561144325
                    user_id: 10023
                    token: 89a1e75e-87da-400a-9899-7ca1a170667c
                    logo_color: '#404040'
                    font_color: '#FFFFFF'
                    homologacao: true
                properties:
                  id:
                    type: number
                    description: ID do login
                  user_id:
                    type: number
                    description: ID do Usuário
                  token:
                    type: string
                    description: Token de acesso
                  logo_color:
                    type: string
                    description: Cor de fundo (frontend)
                  font_color:
                    type: string
                    description: Cor da letra (frontend)
                  homologacao:
                    type: boolean
                    description: Servidor de homologação ou produção?
                required:
                  - user_id
                  - token
      parameters: []
      description: |
        Efetua o login com `usuario@tenant` e `senha` para obter UserID e Token. Se o `id_empresa` não for informado o login será feito na *empresa padrão* do usuário. 
      security:
        - Usuário/Senha: []
      tags:
        - Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                end_ip:
                  type: string
                  description: IP interno para suporte
                id_empresa:
                  description: ID da empresa onde será feito o login
                  type: integer
  '/tokens/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Id do Token
    get:
      summary: Informações do token
      tags:
        - Login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: 1564931602
                    user_id: 10023
                    nome_razao: Alexsander Da Rosa
                    loja: 10
                    nome_loja: ADMINISTRATIVO
                    id_predio: 13
                    nome_usuario: ALEXSANDER
                    conta: cdp
                    url_logo: 'https://storage.googleapis.com/rednaxel-fotos/cdp/logo/web.png'
                    user_email: alexsander.rosa@gmail.com
                    picture_url: 'https://lh6.googleusercontent.com/-1_ZMsIBah1w/AAAAAAAAAAI/AAAAAAAAkkk/0C-voD9hwsk/photo.jpg'
                    ip_externo: 177.101.216.158
                    versao: (Linux 64) Chrome/92
                    ult_oper: '2021-08-19T18:25:30-03:00'
                    cmun: 4314902
                    nome_municipio: Porto Alegre
                    uf: RS
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  nome_usuario:
                    type: string
                    description: Nome do usuário logado
                  user_email:
                    type: string
                    description: Email do usuário logado
                  picture_url:
                    type: string
                    description: URL da foto do usuário logado
                  loja:
                    description: ID da empresa onde foi efetuado o login
                    type: integer
                  nome_razao:
                    type: string
                    description: Nome/Razão Social da empresa onde foi efetuado o login
                  nome_loja:
                    type: string
                    description: Nome reduzido da empresa onde foi efetuado o login
                  id_predio:
                    type: integer
                    description: ID do prédio da empresa logada
                  cmun:
                    type: integer
                    description: Código do município (IBGE) da sede da empresa logada
                  uf:
                    type: string
                    description: UF (estado) da sede da empresa logada
                  nome_municipio:
                    type: string
                    description: Nome do município da sede da empresa logada
                  conta:
                    type: string
                    description: Conta (tenant) do usuário
                  url_logo:
                    type: string
                    description: URL do logotipo do tenant
                  ip_externo:
                    type: string
                    description: IP de onde foi efetuado o login
                  versao:
                    type: string
                    description: Versão do navegador (ou outro app frontend)
                  ult_oper:
                    type: string
                    description: Data/hora da última requisição
        '201':
          description: Created
      operationId: get-tokens-id
      description: Obtém informações do login atual
      parameters: []
  /cashiers:
    get:
      tags:
        - PDV
      summary: Listando PDVs
      description: Lista de Equipamentos PDV de todas as lojas (companies) do tenant
      parameters:
        - name: filter
          in: query
          description: Filters for the query
          schema:
            type: string
        - name: range
          in: query
          description: Paging
          schema:
            type: array
            items:
              type: integer
        - schema:
            type: string
            default: Basic MTIzNDp1dWlkLXRva2Vu
          in: header
          name: Authorization
          required: true
          description: 'ID:TOKEN'
      operationId: get-cashiers
      responses:
        '200':
          description: OK
    post:
      tags:
        - PDV
      summary: Criando PDV
      description: Cria novo PDV
      operationId: post-cashiers
      responses:
        '200':
          description: OK
    parameters: []
  /ping:
    get:
      summary: Verificando servidor
      tags:
        - Login
      operationId: get-ping
      description: Verifica se o servidor está online
      security: []
      responses:
        '200':
          description: Sucesso
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    resp: OK
                properties:
                  resp:
                    type: string
                    minLength: 1
                    description: Resposta (OK)
                required:
                  - resp
              examples:
                JSON:
                  value:
                    resp: OK
    parameters: []
  '/cashiers/{id}':
    get:
      tags:
        - PDV
      summary: Consultando um PDV
      description: Consulta PDV
      parameters:
        - schema:
            type: string
            default: Basic MTIzNDp1dWlkLXRva2Vu
          in: header
          description: 'ID:TOKEN'
          required: true
          name: Authorization
      operationId: get-cashiers-id
      responses:
        '200':
          description: OK
    put:
      tags:
        - PDV
      summary: Atualizando um PDV
      description: Atualiza um PDV
      responses:
        '200':
          description: Success!
        '400':
          description: Error
      operationId: put-cashiers-id
    delete:
      tags:
        - PDV
      summary: Deletando um PDV
      description: Deleta um PDV
      responses:
        '200':
          description: Info about deleted POS
        '400':
          description: Error
      operationId: delete-cashiers-id
    parameters:
      - schema:
          type: integer
          minimum: 1
          default: 1
        name: id
        in: path
        required: true
        description: ID do PDV
  /orders:
    get:
      tags:
        - Pedidos (orders)
      summary: Listando pedidos
      description: |-
        Lista de pedidos. Filtros:
        - `ids_empresas`: integer[]
        - `id_destino`: integer
        - `meus_pedidos`: boolean
        - `dias`: integer
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      operationId: get-orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Order.yaml
    post:
      tags:
        - Pedidos (orders)
      summary: Criando um novo pedido
      description: Cria um novo pedido
      operationId: post-orders
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Order.yaml
    parameters: []
  /skus:
    get:
      summary: Listando produtos (SKUs)
      tags:
        - Produtos (skus)
      operationId: get-skus
      description: |
        Lista de produtos

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | codigo | int64 | código do Produto (SKU)| 
        | id_categ | int64 | ID da categoria produto | 
        | inativos | bool |  padrão é filtrar somente os ativos| 
        | ncm_vencido | bool |  fim da vigência menor que a data atual| 
        | q | string | descrição do produto | 
        | fornecedor | string | nome do fornecedor | 
        | numero_pedido | int64 | produtos que estão nesse pedido| 
        | barcode | int64 | código de barras (pode ser Produto ou Endereço de Estoque) | 
        | id_grade | int64 |  Código da grade de produto (variações) |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Sku.yaml
    post:
      summary: Criando um produto (SKU)
      operationId: post-skus
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Sku.yaml
      description: Cria um SKU
      tags:
        - Produtos (skus)
  /customercategories:
    get:
      summary: Listando Pessoa Categoria (customercategories)
      operationId: get-customercategories
      description: |
        Lista da Pessoa Categoria

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | ID | int64 | código da categoria pessoa| 
        | IDs | []int64 | vetor do código da categoria pessoa| 
        | desc_categoria | string | Descrição da categoria pessoa | 
      parameters:
        - in: query
          name: filter
          description: Filtro
          schema:
            default: '{"id":5}'
            example: '{"id":5}'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa-Categoria'
      tags:
        - Pessoas (customercategories)
    post:
      summary: Criando uma Pessoa Categoria (customercategories)
      operationId: post-customercategories
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pessoa-Categoria'
      description: Cria uma pessoa categoria
      tags:
        - Pessoas (customercategories)
    parameters: []
  '/customercategories/{id}':
    get:
      summary: Consultando uma Pessoa Categoria (customercategories)
      operationId: get-customercategories-id
      parameters: []
      description: Mostra uma pessoa categoria já existente
      tags:
        - Pessoas (customercategories)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa-Categoria'
    put:
      summary: Atualizando uma Pessoa Categoria  (customercategories)
      operationId: put-customercategories-id
      responses:
        '200':
          description: OK
      description: Atualiza uma pessoa categoria já existente
      tags:
        - Pessoas (customercategories)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pessoa-Categoria'
    delete:
      summary: Excluindo uma Pessoa Categoria (customercategories)
      operationId: delete-customercategories-id
      responses:
        '200':
          description: OK
      description: Exclui uma pessoa categoria já existente.
      tags:
        - Pessoas (customercategories)
    parameters:
      - schema:
          type: integer
          default: 100
          example: 100
        name: id
        in: path
        description: ID que representa a configuração do sku x empresa
        required: true
  /skuconfigs:
    get:
      summary: Listando Configuração do sku X empresa (SkuConfigs)
      operationId: get-skuconfigs
      description: |
        Lista de configuração de sku x empresa (mostra também o cmm (consumo médio mensal))

        A entidade é constituída de duas partes:
        1) os campos da fórmula do CMM ( SOMENTE LEITURA pois é calculado). São eles:
          - dias_estoq, quant_mes, ticket_mes, valor_mes, qtd_natural 

        2) os campos da configuração ( EDITADOS). São eles: 
          - sazo_efet, quant_expo, total_sazo, es_minimo, quant_camp, cmmf_quant, cmmf_validade

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | codigo_sku | int64 | código do Produto (SKU)| 
        | id_empresa | int64 | ID da empresa | 
      parameters:
        - in: query
          name: filter
          description: Filtro
          schema:
            default: '{"codigo_sku":5}'
            example: '{"codigo_sku":5,"id_empresa":1}'
          required: true
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU-Configs'
      tags:
        - Produtos (skuconfigs)
    post:
      summary: Criando configuração do sku X empresa (SKUConfigs)
      operationId: post-skuconfigs
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Configs'
      description: 'Cria um SKUConfig '
      tags:
        - Produtos (skuconfigs)
    parameters: []
  '/skuconfigs/{id}':
    get:
      summary: Consultando uma configuração do sku X empresa  (SKUconfigs)
      operationId: get-skusconfigs-id
      parameters: []
      description: Mostra um skuconfig já existente
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU-Configs'
              examples:
                example-1:
                  value:
                    id: 80095
                    id_empresa: 0
                    sigla_loja: string
                    nome_reduzido: string
                    codigo_sku: 0
                    dias_estoq: 0
                    quant_mes: 0
                    ticket_mes: 0
                    valor_mes: 0
                    quant_natural: 0
                    expo: 0
                    sazo_efet: 0
                    total_sazo: 0
                    es_minimo: 0
                    cmmf_quant: 0
                    cmmf_validade: string
                    ultima_venda: string
                    data_hora: string
      tags:
        - Produtos (skuconfigs)
    put:
      summary: Atualizando uma configuração do sku X empresa  (SKUConfigs)
      operationId: put-skuconfigs-id
      responses:
        '200':
          description: OK
      description: Atualiza um skuconfig já existente
      tags:
        - Produtos (skuconfigs)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Configs'
    delete:
      summary: Excluindo uma configuração do sku X empresa  (SKUConfigs)
      operationId: delete-skusconfigs-id
      responses:
        '200':
          description: OK
      description: '"Exclui" um skuconfig já existente. O sistema não deleta o registro, apenas coloca nulo nos campos de configuração do sku x empresa, ou seja, os campos: sazo_efet, quant_expo, total_sazo, es_minimo, quant_camp, cmmf_quant, cmmf_validade são setados para nulo, e o campo interno config_compra é armazenado a data e o usuário que efetuou o ajuste.'
      tags:
        - Produtos (skuconfigs)
    parameters:
      - schema:
          type: integer
          default: 100
          example: 100
        name: id
        in: path
        description: ID que representa a configuração do sku x empresa
        required: true
  '/skus/{id}':
    get:
      summary: Consultando um produto (SKU)
      tags:
        - Produtos (skus)
      operationId: get-skus-id
      parameters: []
      description: Mostra um produto já existente
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Sku.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    message: Nenhum registro encontrado
                properties:
                  message:
                    type: string
                    minLength: 1
                    description: Mensagem de Erro
                required:
                  - message
    put:
      summary: Atualizando um produto (SKU)
      operationId: put-skus-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skus)
      description: Atualiza um produto já existente
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Sku.yaml
    delete:
      summary: Excluindo um produto (SKU)
      operationId: delete-skus-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skus)
      description: Exclui um produto já existente
    parameters:
      - schema:
          type: integer
          default: 5
        name: id
        in: path
        description: Código do produto (SKU)
        required: true
  '/skuarticles/{id}':
    get:
      summary: Consultando uma mercadoria
      tags:
        - Produtos (skuarticles)
      operationId: get-skuarticles-id
      parameters: []
      description: Mostra uma mercadoria já existente
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/SkuArticle.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    message: Nenhum registro encontrado
                properties:
                  message:
                    type: string
                    minLength: 1
                    description: Mensagem de Erro
                required:
                  - message
    put:
      summary: Atualizando uma mercadoria
      operationId: put-skuarticles-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skuarticles)
      description: Atualiza uma mercadoria já existente
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/SkuArticle.yaml
    delete:
      summary: Excluindo uma mercadoria
      operationId: delete-skuarticles-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skuarticles)
      description: Exclui uma mercadoria já existente
    parameters:
      - schema:
          type: integer
          default: 10888
        name: id
        in: path
        description: Código da mercadoria
        required: true
  /skuarticles:
    get:
      summary: Listando mercadorias
      tags:
        - Produtos (skuarticles)
      operationId: get-skuarticles
      description: |
        Lista de mercadorias (SKUs e suas embalagens)

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | codigo_sku | int64 | código da mercadoria (ver filtro por embalagens)| 
        | embalagens | bool | deverá informar true para visualizar também as embalagens | 
        | numero_pedido | int64 | produtos que estão nesse pedido| 
        | codigo_descricao | string | Descrição da mercadoria, ou Se for numero então Se > 9999999 filtra por codigo de barras, senão pelo codigo mercadoria | 
        | fornecedor | string |  nome do fornecedor| 
        | marca | string |  nome da marca| 
        | ids_categ | []int64 | array de IDs de categorias | 
        | nivel | int | nivel da categoria | 
        | categoria | string | nome da categoria | 
        | fora_venda | bool |  incluir produtos que estão fora de venda? (padrão: false) |
        | referencia | string |  referência do código da mercadoria do fornecedor |
        | ncm | string |  código ncm |
        | barcode | int64 | código de barras|
        | user_id | int64 | ID do usuário que criou a mercadoria|
        | data_preco | string |  Data/Hora da ultima alteração do preco promocional ou mercadoria |
        | id_empresa | int |  utilizado para filtrar o estoque do predio |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/SkuArticle.yaml
    post:
      summary: Criando uma mercadoria
      operationId: post-skuarticles
      responses:
        '200':
          description: OK
      description: Cria uma mercadoria (embalagem de um SKU)
      tags:
        - Produtos (skuarticles)
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/SkuArticle.yaml
    parameters: []
  '/orders/{id}':
    put:
      tags:
        - Pedidos (orders)
      summary: Atualizando um pedido
      description: Atualiza um pedido
      operationId: put-orders-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Order.yaml
    get:
      tags:
        - Pedidos (orders)
      summary: Consultando um pedido
      description: Consulta um pedido
      operationId: get-orders-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Order.yaml
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Número do Pedido
  /distributions:
    get:
      summary: Listando distribuições
      tags:
        - Distribuição (distributions)
      operationId: get-distributions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
      description: Lista de distribuições para filiais
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Distribution.yaml
    post:
      summary: Criando uma nova distribuição
      operationId: post-distributions
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                ids_empresas:
                  type: array
                  description: Lista de empresas destino
                  items: {}
                ids_categorias:
                  type: string
                id_fornec:
                  type: integer
                numero_pedido:
                  type: integer
                  description: Nº do pedido que contém os itens que serão enviados
                tipo_distrib:
                  type: string
                  enum:
                    - NORMAL
                    - ABLOJA
                    - REVFND
                    - REVSNO
                  description: 'Tipo de distribuição (padrão: NORMAL)'
                curva_minima_geral:
                  type: integer
                  description: Somente produtos desta curva para cima serão enviados
                calendario:
                  type: boolean
                gerar_pedidos:
                  type: boolean
                  description: 'Se TRUE, gera os pedidos após criar a distribuição'
                codigo_sku:
                  type: integer
                  description: Código de um SKU para testes
                predio:
                  type: integer
                  description: 'Prédio de origem (padrão: CD)'
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
      parameters: []
      tags:
        - Distribuição (distributions)
      description: Cria uma nova distribuição
      responses:
        '200':
          description: OK
    parameters: []
  /products:
    parameters: []
    get:
      summary: Listando Produtos
      operationId: get-products
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  id: 10887
                  sku_id: 18441
                  tipo_item: 0
                  ativo: true
                  referencia: OFC075CA4
                  config_sku: {}
                  custo_liquido: 15.8021
                  curva: 12
                  vbcst_nota: 20.6758
                  icms_efetivo: 17
                  vicmsst_ret: 0.7915
                  vunit_compra: 15.69
                  cmv: 16.1999
                  flags_sku: {}
                  ids_tags:
                    - 118
                  cmp_principal: 13.4146
                  ptotal_padrao: 7.585
                  id_grade: 4213740
                  codigo_alfa: '10887'
                  desc_basica: 'PAPEL CHAMEX A4 21CMX29,7CM 75G 500 FL BRANCO'
                  grade_ativa: true
                  orig: 5
                  aliq_ipi: 3.25
                  pmva_st: 25
                  cod_ncm: '48025610'
                  cod_cest: '1903100'
                  config_meta:
                    taxonomia: IMPRIMÍVEL > PAPEIS > PAPEL SULFITE IMPRIMIVEL > PAPEL SULFITE A4 075GR BRANCO 500FL
                  cont_skus: 1
                  id_categoria: 4273
                  desc_categoria: PAPEL SULFITE A4 075GR BRANCO 500FL
                  id_marca: 122
                  nome_marca: CHAMEX
                  id_classe: 3
                  desc_trib: SUBST. TRIB.
                  id_agrup: 14
                  codigo_agrup: I
                  desc_agrupamento: ICONE
                  user_id: 54865
                  nome_usuario: INTEGSKU
                  id_unidade: 22
                  ucom: PCT
                  prod_xprod: 'PAPEL CHAMEX A4 21CMX29,7CM 75G 500 FL BRANCO'
                  margem_padrao: 31.29
                  preco_venda: 25.98
                  embalagem_venda: true
                  data_cadastro: '2002-05-31T00:00:00'
                  nome_sku: 'Papel Chamex A4 21cm x 29,7cm 75g 500 Folhas Branco'
                  desc_curta: 'Pacote com 500 folhas de papel sulfite 75g branco, tamanho A4. A melhor solução para suas impressões, com garantia de qualidade profissional Chamex.'
                  desc_longa: |-
                    - Cor do Papel: Branco
                    - Gramatura: 75 g/m2 
                    - Formato: A4 (210mm x 297mm)
                    - Quantidade por pacote: 500 folhas

                    O melhor para uso PROFISSIONAL, o Chamex Office oferece a melhor solução para suas impressões, com garantia de qualidade profissional. Superfície resistente, corte perfeito e absorção equilibrada que permite o melhor deslizamento na impressora evitando desperdício de tinta.
                    O sulfite Chamex é produzido a partir de florestas 100% plantadas e renováveis e suas fibras são tratadas para obter o mais alto grau de brancura. Garante 99,99% não atolamento em impressoras.
                  info_extra:
                    exibir_website: true
                  esmin_padrao: 100
                  ultima_compra: '2022-05-27T00:00:00'
                  medidas:
                    - mult_sku: 1
                      peso_kg: 2.34
                      largura_m: 0.297
                      altura_m: 0.21
                      profundidade_m: 0.048
                    - mult_sku: 5
                      peso_kg: 11.5
                      largura_m: 0.32
                      altura_m: 0.227
                      profundidade_m: 0.24
                    - mult_sku: 10
                      peso_kg: 23.4
                      largura_m: 0.445
                      altura_m: 0.315
                      profundidade_m: 0.24
                    - mult_sku: 20
                      peso_kg: 46.8
                      largura_m: 0.445
                      altura_m: 0.315
                      profundidade_m: 0.5
                    - mult_sku: 50
                      peso_kg: 117
                      largura_m: 0.45
                      altura_m: 0.63
                      profundidade_m: 0.5
                    - mult_sku: 100
                      peso_kg: 230
                      largura_m: 1.07
                      altura_m: 1.07
                      profundidade_m: 1.6
                    - mult_sku: 427.4265
                      peso_kg: 983.081
                      largura_m: 1.07
                      altura_m: 1.07
                      profundidade_m: 1.6
                  fotos:
                    - id: 7167800
                      url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/71678.JPG'
                      primario: 71678-0
                      secundario: TON com 427
                    - id: 1088700
                      url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/10887.JPG'
                      primario: 10887-0
                      secundario: 'PCT '
                    - id: 1088701
                      url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/10887-1.JPG'
                      primario: 10887-1
                      secundario: 'PCT '
                    - id: 7227000
                      url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/72270.JPG'
                      primario: 72270-0
                      secundario: CX com 100
                    - id: 12037800
                      url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/120378.JPG'
                      primario: 120378-0
                      secundario: CX com 5
                    - id: 1088800
                      url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/10888.JPG'
                      primario: 10888-0
                      secundario: CX com 10
                    - id: 1088809
                      url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/10888-9.JPG'
                      primario: 10888-9
                      secundario: CX com 10
                  url_foto_principal: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/10887.JPG'
              properties:
                id:
                  type: integer
                sku_id:
                  type: integer
                tipo_item:
                  type: integer
                ativo:
                  type: boolean
                referencia:
                  type: string
                config_sku:
                  type: object
                custo_liquido:
                  type: number
                curva:
                  type: integer
                vbcst_nota:
                  type: number
                icms_efetivo:
                  type: integer
                vicmsst_ret:
                  type: number
                vunit_compra:
                  type: number
                cmv:
                  type: number
                flags_sku:
                  type: object
                ids_tags:
                  type: array
                  items:
                    type: integer
                cmp_principal:
                  type: number
                ptotal_padrao:
                  type: number
                id_grade:
                  type: integer
                codigo_alfa:
                  type: string
                desc_basica:
                  type: string
                grade_ativa:
                  type: boolean
                orig:
                  type: integer
                aliq_ipi:
                  type: number
                pmva_st:
                  type: integer
                cod_ncm:
                  type: string
                cod_cest:
                  type: string
                config_meta:
                  type: object
                  properties:
                    taxonomia:
                      type: string
                cont_skus:
                  type: integer
                id_categoria:
                  type: integer
                desc_categoria:
                  type: string
                id_marca:
                  type: integer
                nome_marca:
                  type: string
                id_classe:
                  type: integer
                desc_trib:
                  type: string
                id_agrup:
                  type: integer
                codigo_agrup:
                  type: string
                desc_agrupamento:
                  type: string
                user_id:
                  type: integer
                nome_usuario:
                  type: string
                id_unidade:
                  type: integer
                ucom:
                  type: string
                prod_xprod:
                  type: string
                margem_padrao:
                  type: number
                preco_venda:
                  type: number
                embalagem_venda:
                  type: boolean
                data_cadastro:
                  type: string
                nome_sku:
                  type: string
                desc_curta:
                  type: string
                desc_longa:
                  type: string
                info_extra:
                  type: object
                  properties:
                    exibir_website:
                      type: boolean
                esmin_padrao:
                  type: integer
                ultima_compra:
                  type: string
                medidas:
                  type: array
                  items:
                    type: object
                    properties:
                      mult_sku:
                        type: number
                      peso_kg:
                        type: number
                      largura_m:
                        type: number
                      altura_m:
                        type: number
                      profundidade_m:
                        type: number
                fotos:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      url_foto:
                        type: string
                      primario:
                        type: string
                      secundario:
                        type: string
                url_foto_principal:
                  type: string
            examples: {}
        description: ''
      description: |
        Lista de produtos

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | Código do Produto (SKU)| 
        | ids | []int64 | Array de códigos de Produtos (SKU)| 
        | inativos | bool | Padrão é filtrar somente os ativos | 
        | cod_produto | int64 | Código de produto podendo ser embalagem| 
        | com_variacoes | bool | Somente os produtos onde há variações (cont_skus > 1) | 
        | id_categoria | int64 | Id da categoria do produto | 
        | codigo_descricao | string | Código de barras, Descrição ou Código do produto | 
        | ncm_vencido | bool | Produtos onde o fim_vigencia < Data Atual) | 
        | id_grade | int64 | ID da grade do Produto | 
        | idpessoa_fantasia_cpf_cnpj | string | Filtro pelo código, nome ou CNPJ do fornecedor | 
        | q | string | Descrição do produto | 
        | numero_pedido | int64 | Produtos que estão nesse pedido | 
        | expo_sem_arroba | bool |  Filtra os produtos que não possuem endereço no A@ | 
        | id_empresa | int |  Ao filtrar o expo_sem_arroba é necessário informar o id_empresa | 
      tags:
        - Produtos (products)
  /skustocks:
    get:
      summary: Listando endereços de estoque
      tags:
        - Estoque (skustocks)
      operationId: get-skustocks
      description: |
        Lista de endereços de estoque (SKU x Prédio x Setor)

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | cod_sku | int64 | código do Produto (SKU)| 
        | id_predio | int64 | ID do prédio | 
        | id_empresa | int64 |  Filtro por empresa. O id_predio tem prioridade sobre o id_empresa | 
        | setor_letra | string | Filtra os estoques de um setor |
        | numero_pedido | int64 |  Filtra o estoque dos itens do pedido| 
        | id_categoria | int64 | Filtra o estoque dos itens da categoria a ser filtrada | 
        | data_inicial | string | Data Inicial alteração de estoque | 
        | data_final | string | Data da última alteração de estoque| 
        | manutencao | string | Filtrar os "encalhados" ou "negativos" | 
        | id_recepcao | int64 | ID da recepção |
        | fornecedor | string | Nome do Fornecedor |
        | todos | bool | Por padrão traz somente os estoques diferentes de zero. Para trazer também os zerados deve-se colocar "todos" |
        | somente_zerados | bool | Somente com estoques zerados ou menores que zero |
        | arroba_zerado | bool | Somente os estoques com o setor A zerado |
        | tipo_virtual | int | Quando 35 = DISTRIB (Distribuição em trânsito), 36 = RMA (Retorno de Mercadoria), 37 = Descarte (Danificado aguardando descarte), 38 = PERDA, e quando 99 = todos |
        | pendente_erp | bool | Usado na integração |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/SkuStock.yaml
    post:
      summary: Criando um endereço
      operationId: post-skustocks
      responses:
        '200':
          description: OK
      description: Cria um novo endereço de estoque
      tags:
        - Estoque (skustocks)
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/SkuStock.yaml
  /buildings:
    get:
      summary: Listando prédios de estoque
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predio-Estoque'
              examples:
                example-1:
                  value:
                    id: 0
                    desc_predio: string
                    address_id: 0
                    logradouro: string
                    numero: 0
                    nome_municipio: string
                    uf: string
                    empresas:
                      - id: 0
                        sigla_loja: string
                    config_predio: {}
      operationId: get-buildings
      description: |
        Lista de prédios de estoque 

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | código do Prédio| 
        | todos | boolean | Padrão False, trazendo somente os prédios com endereço | 
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Prédios de Estoque
    post:
      summary: Criando um endereço
      operationId: post-buildings
      responses:
        '200':
          description: OK
      description: Cria um novo prédio de estoque
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Predio-Estoque'
      tags:
        - Prédios de Estoque
    parameters: []
  /paymentcodes:
    get:
      summary: Listando formas de quitação
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forma-Quitacao'
              examples:
                example-1:
                  value:
                    id: 1
                    sigla_forma: DIN
                    desc_forma: DINHEIRO
                    tpag: 1
                    forma_ativa: true
      operationId: get-paymentcodes
      description: |
        Lista de formas de quitação

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | id da forma quitação| 
        | todos | boolean | Padrão False, trazendo somente as formas de quitação ativas | 
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Formas de Quitação (paymentcodes)
    post:
      summary: Criando uma forma de quitação
      operationId: post-paymentcodes
      responses:
        '200':
          description: OK
      description: Cria uma nova forma de quitação
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forma-Quitacao'
      tags:
        - Formas de Quitação (paymentcodes)
    parameters: []
  /skuparts:
    get:
      summary: Listando Composição SKU
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku-Composicao'
              examples:
                example-1:
                  value:
                    id: 1
                    sigla_forma: DIN
                    desc_forma: DINHEIRO
                    tpag: 1
                    forma_ativa: true
      operationId: get-skuparts
      description: |
        Lista de formas de quitação

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | id da Composição SKU| 
        | codigo_sku | int64 | Código do SKU | 
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Composição Sku (skuparts)
    post:
      summary: 'Criando uma Composição SKU (Ex: Display)'
      operationId: post-skuparts
      responses:
        '200':
          description: OK
      description: Cria uma nova SKU Composição
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sku-Composicao'
        description: ''
      tags:
        - Composição Sku (skuparts)
    parameters: []
  /expenseaccounts:
    get:
      summary: Listando as contas de despesa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta-Despesa'
              examples:
                example-1:
                  value:
                    id: 0
                    codigo_conta: 0
                    conta_contabil: string
                    desc_conta: string
                    conta_ativa: true
                    config_conta: null
                    padrao_compra: true
      operationId: get-expenseaccounts
      description: |
        Lista de contas de despesa

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | id da conta despesa| 
        | codigo_conta | int64 | código da conta despesa| 
        | desc_conta | string | Descrição da conta despesa. Pesquisa maiúscula e minúscula e em qualquer parte da descrição| 
        | conta_contabil | string | código string exato da conta contábil| 
        | todos | boolean | Padrão False, trazendo somente as contas de despesa ativas | 
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Conta despesa (expenseaccounts)
    post:
      summary: Criando uma conta de despesa
      operationId: post-expenseaccounts
      responses:
        '200':
          description: OK
      description: Cria uma nova conta de despesa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conta-Despesa'
            examples:
              example-1:
                value:
                  id: 0
                  codigo_conta: 0
                  conta_contabil: string
                  desc_conta: string
                  conta_ativa: true
                  config_conta: null
                  padrao_compra: true
      tags:
        - Conta despesa (expenseaccounts)
    parameters: []
  /brands:
    get:
      summary: Listando as marcas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marca'
              examples:
                example-1:
                  value:
                    id: 5766
                    nome_marca: REGISPEL
                    marca_ativa: true
                    produtos: 16
      operationId: get-brands
      description: |-
        Lista de marcas de produto 

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | id da Marca| 
        | ids | []int64 | Possibilidade de filtrar mais de uma marca |
        | nome_marca | string | Nome da marca |
        | inativas | bool | Trazer somente as marcas inativas |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      tags:
        - Marcas (brands)
    post:
      summary: Criando uma marca
      operationId: post-brands
      responses:
        '200':
          description: OK
      description: Cria uma nova marca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marca'
      tags:
        - Marcas (brands)
    parameters: []
  '/skustocks/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID do endereço do estoque
    get:
      summary: Consultando um estoque
      tags:
        - Estoque (skustocks)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/SkuStock.yaml
      operationId: get-skustocks-id
      description: Consulta um endereço de estoque
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    put:
      summary: Atualizando um endereço
      operationId: put-skustocks-id
      responses:
        '200':
          description: OK
      description: Atualiza um endereço de estoque
      tags:
        - Estoque (skustocks)
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/SkuStock.yaml
        description: ''
    delete:
      summary: Excluindo um endereço
      operationId: delete-skustocks-id
      responses:
        '200':
          description: OK
      description: Exclui um endereço de estoque. Ele precisa estar vazio (quantidade zerada) para poder ser excluído.
      tags:
        - Estoque (skustocks)
  '/buildings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id do prédio
    get:
      summary: Consultando um prédio de estoque
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predio-Estoque'
      operationId: get-buildings-id
      description: Consulta um prédio de estoque
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Prédios de Estoque
    put:
      summary: Atualizando um prédio de estoque
      operationId: put-buildings-id
      responses:
        '200':
          description: OK
      description: Atualiza um prédio de estoque
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Predio-Estoque'
        description: ''
      tags:
        - Prédios de Estoque
    delete:
      summary: Excluindo um prédio de estoque
      operationId: delete-buildings-id
      responses:
        '200':
          description: OK
      description: Exclui um prédio de estoque.
      tags:
        - Prédios de Estoque
  '/paymentcodes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da forma de quitação
    get:
      summary: Consultando uma forma de quitação
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forma-Quitacao'
      operationId: get-paymentcodes-id
      description: Consulta uma forma de pagamento
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Formas de Quitação (paymentcodes)
    put:
      summary: Atualizando uma forma de quitação
      operationId: put-paymentcodes-id
      responses:
        '200':
          description: OK
      description: Atualiza uma forma de quitação
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forma-Quitacao'
        description: ''
      tags:
        - Formas de Quitação (paymentcodes)
    delete:
      summary: Excluindo uma forma de quitação
      operationId: delete-paymentcodes-id
      responses:
        '200':
          description: OK
      description: Exclui uma forma de quitação.
      tags:
        - Formas de Quitação (paymentcodes)
  '/skuparts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da forma de quitação
    get:
      summary: Consultando uma Composição SKU
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku-Composicao'
      operationId: get-skuparts-id
      description: 'Consulta uma composição SKU (Ex:  Display)'
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Composição Sku (skuparts)
    put:
      summary: Atualizando uma composição SKU
      operationId: put-skuparts-id
      responses:
        '200':
          description: OK
      description: Atualiza uma composição SKU
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sku-Composicao'
        description: ''
      tags:
        - Composição Sku (skuparts)
    delete:
      summary: Excluindo uma Composição SKU
      operationId: delete-skuparts-id
      responses:
        '200':
          description: OK
      description: Exclui uma Composição SKU
      tags:
        - Composição Sku (skuparts)
  '/expenseaccounts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da conta de despesa
    get:
      summary: Consultando uma conta despesa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta-Despesa'
              examples:
                example-1:
                  value:
                    id: 0
                    codigo_conta: 0
                    conta_contabil: string
                    desc_conta: string
                    conta_ativa: true
                    config_conta: null
                    padrao_compra: true
      operationId: get-expenseaccounts-id
      description: Consulta uma conta despesa
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Conta despesa (expenseaccounts)
    put:
      summary: Atualizando uma conta despesa
      operationId: put-expenseaccounts-id
      responses:
        '200':
          description: OK
      description: Atualiza uma conta despesa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conta-Despesa'
            examples:
              example-1:
                value:
                  id: 0
                  codigo_conta: 0
                  conta_contabil: string
                  desc_conta: string
                  conta_ativa: true
                  config_conta: null
                  padrao_compra: true
        description: ''
      tags:
        - Conta despesa (expenseaccounts)
    delete:
      summary: Excluindo uma conta despesa
      operationId: delete-expenseaccounts-id
      responses:
        '200':
          description: OK
      description: Exclui uma conta despesa.
      tags:
        - Conta despesa (expenseaccounts)
  '/brands/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da marca
    get:
      summary: Consultando uma marca de produto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marca'
      operationId: get-brands-id
      description: Consulta uma marca de produto
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Marcas (brands)
    put:
      summary: Atualizando um prédio de estoque
      operationId: put-brands-id
      responses:
        '200':
          description: OK
      description: Atualiza uma marca de produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marca'
        description: ''
      tags:
        - Marcas (brands)
    delete:
      summary: Excluindo uma marca de produto
      operationId: delete-brands-id
      responses:
        '200':
          description: OK
      description: Exclui uma marca de produto.
      tags:
        - Marcas (brands)
  '/pricelists/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da lista de preço
    get:
      summary: Consultando uma Lista de Preços (PLU)
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLU'
      operationId: get-pricelists-id
      parameters: []
      description: Consulta uma lista de preços
    put:
      summary: Atualizando uma Lista de Preços (PLU)
      operationId: put-pricelists-id
      responses:
        '200':
          description: OK
      description: Atualiza dados de uma lista de preços
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLU'
      tags:
        - Listas de Preços (pricelists)
    delete:
      summary: Excluindo uma Lista de Preços (PLU)
      operationId: delete-pricelists-id
      responses:
        '200':
          description: OK
      tags:
        - Listas de Preços (pricelists)
      description: Exclui uma lista de preços
  /pricelists:
    get:
      summary: Listando as Listas de Preços (PLU)
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PLU'
      operationId: get-pricelists
      description: Lista os PLUs
    post:
      summary: Criando uma nova Lista de Preços (PLU)
      operationId: post-pricelists
      responses:
        '200':
          description: OK
      description: Cria uma nova Lista de Preços (PLU)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLU'
      tags:
        - Listas de Preços (pricelists)
  '/pricelistarticles/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id do registro
    get:
      summary: 'ITEM: Consultar produto x PLU'
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLU-item'
      operationId: get-pricelistarticles-id
      description: Consulta um preço de um PLU
    post:
      summary: 'ITEM: Inserir produto x PLU'
      operationId: post-pricelistarticles-id
      responses:
        '200':
          description: OK
      description: Insere um registro na lista de preços
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLU-item'
        description: ''
      tags:
        - Listas de Preços (pricelists)
  '/customers/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da pessoa
    get:
      summary: Consulta uma pessoa
      tags:
        - Pessoas (customers)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Customer.yaml
      operationId: get-customers-id
      description: 'Consulta uma pessoa física ou jurídica (cliente, fornecedor, colaborador, etc)'
    put:
      summary: Atualiza uma pessoa
      operationId: put-customers-id
      responses:
        '200':
          description: OK
      description: Atualiza uma pessoa física ou jurídica
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Customer.yaml
      tags:
        - Pessoas (customers)
    delete:
      summary: Inativa uma pessoa
      operationId: delete-customers-id
      responses:
        '200':
          description: OK
      description: Inativa uma pessoa física ou jurídica
      tags:
        - Pessoas (customers)
  '/companies/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da empresa
    get:
      summary: Consulta uma empresa
      tags:
        - Empresas (companies)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empresa'
      operationId: get-companies-id
      description: Consulta uma empresa
    put:
      summary: Atualiza uma empresa
      operationId: put-companies-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empresa'
        description: ''
      description: Atualiza uma empresa
      tags:
        - Empresas (companies)
  '/addresses/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id do endereço
    get:
      summary: Consultando um endereço
      tags:
        - Endereços de pessoas (addresses)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endereco'
      operationId: get-addresses-id
      description: Consulta um endereço de uma pessoa
    put:
      summary: Atualizando um endereço
      operationId: put-addresses-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
      description: Atualiza um endereço
      tags:
        - Endereços de pessoas (addresses)
    delete:
      summary: Excluindo um endereço
      operationId: delete-addresses-id
      responses:
        '200':
          description: OK
      description: Exclui um endereço
      tags:
        - Endereços de pessoas (addresses)
  /addresses:
    get:
      summary: Listando endereços de uma pessoa
      tags:
        - Endereços de pessoas (addresses)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
      operationId: get-addresses
      description: |
        Listagem de endereços

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id_pessoa | int64 | código da pessoa | 
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando um endereço
      operationId: post-addresses
      responses:
        '200':
          description: OK
      tags:
        - Endereços de pessoas (addresses)
      description: Cria um endereço de uma pessoa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
        description: ''
  '/purchasemappings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id do mapeamento
    get:
      summary: Consultando uma memória de mapeamento
      tags:
        - Mapeamentos (purchasemappings)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU-Mapeamento'
      operationId: get-purchasemappings-id
      description: Consulta uma memória de Mapeamento Produto x Fornecedor
    put:
      summary: Atualizando uma memória de mapeamento
      operationId: put-purchasemappings-id
      responses:
        '200':
          description: OK
      tags:
        - Mapeamentos (purchasemappings)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Mapeamento'
      description: Atualiza uma memória de mapeamento produto x fornecedor
  '/taxclasses/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da classe fiscal
    get:
      summary: Consulta uma Classe Fiscal
      tags:
        - Tributária (Classe Fiscal)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classe-Fiscal'
      operationId: get-taxclasses-id
      description: Consulta uma classe fiscal
    put:
      summary: Atualizando uma classe fiscal
      operationId: put-taxclasses-id
      responses:
        '200':
          description: OK
      tags:
        - Tributária (Classe Fiscal)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classe-Fiscal'
      description: Atualiza uma classe fiscal
    delete:
      summary: Excluindo uma classe fiscal
      operationId: delete-taxclasses-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
            application/xml:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classe-Fiscal'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      description: Exclui uma classe fiscal
      tags:
        - Tributária (Classe Fiscal)
  /purchasemappings:
    get:
      summary: Memória de mapeamentos
      tags:
        - Mapeamentos (purchasemappings)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SKU-Mapeamento'
      operationId: get-purchasemappings
      description: 'Listagem de mapeamentos memorizados de um produto (ou fornecedor). Quando um XML é carregado, o sistema pesquisa nessa memória para fazer o mapeamento automaticamente.'
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando uma memória de mapeamento
      operationId: post-purchasemappings
      responses:
        '200':
          description: OK
      tags:
        - Mapeamentos (purchasemappings)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Mapeamento'
      description: Cria uma nova memória de mapeamento produto x fornecedor
  /taxclasses:
    get:
      summary: Listando as classes fiscais
      tags:
        - Tributária (Classe Fiscal)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Classe-Fiscal'
      operationId: get-taxclasses
      description: |
        Listagem das classes fiscais

        Ver regra das prioridades do CFOP em: https://rednaxel.freshdesk.com/support/solutions/articles/47001200096-regras-do-cfop/preview
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando um mapeamento
      operationId: post-taxclasses
      responses:
        '200':
          description: OK
      tags:
        - Tributária (Classe Fiscal)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classe-Fiscal'
      description: Cria uma nova classe fiscal
    parameters: []
  /invoices:
    post:
      summary: Criando Nota/Cupom Fiscal
      operationId: post-invoices
      responses:
        '200':
          description: OK
      tags:
        - Notas/Cupons Fiscais (invoices)
      parameters: []
      description: 'Envia o XML de uma NFe/NFCe '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                xml:
                  type: string
                  description: XML codificado em Base64
                  writeOnly: true
              required:
                - xml
    get:
      summary: ''
      operationId: get-invoices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Invoice.yaml
      description: Lista de notas/cupons
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Notas/Cupons Fiscais (invoices)
  /orderitems:
    get:
      summary: Lista de itens de um pedido
      tags:
        - Pedidos (orders)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/OrderItem.yaml
      operationId: get-orderitems
      description: Filtro "numero_pedido" é obrigatório.
      parameters:
        - in: query
          name: filter
          description: Filtros
          required: true
          schema:
            default: '{"numero_pedido":999999}'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Insere um item em um pedido
      operationId: post-orderitems
      responses:
        '200':
          description: OK
      description: 'Insere um item em um pedido. Se o `vuncom` (valor unitário) não for informado, usa o preço de tabela.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/OrderItem.yaml
      tags:
        - Pedidos (orders)
  '/orderitems/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id do item de um pedido
    get:
      summary: Consulta um item de um pedido
      tags:
        - Pedidos (orders)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/OrderItem.yaml
      operationId: get-orderitems-id
      description: Consulta (para edição) um item de um pedido
    put:
      summary: Atualiza um item de um pedido
      operationId: put-orderitems-id
      responses:
        '200':
          description: OK
      description: Modifica um item de um pedido
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/OrderItem.yaml
      tags:
        - Pedidos (orders)
    delete:
      summary: Remove um item de um pedido
      operationId: delete-orderitems-id
      responses:
        '200':
          description: OK
      description: Remove um item de um pedido
      tags:
        - Pedidos (orders)
  /customers:
    get:
      summary: Listando pessoas
      tags:
        - Pessoas (customers)
      operationId: get-customers
      description: |
        Filtros:
        - `nome` (string): Nome ou Razão Social
        - `nome_fantasia` (string): Nome Fantasia
        - `inativos` (bool): Inclui os inativos
        - `inconsistentes` (bool): Inclui os inconsistentes
        - `id_canal` (integer): canal onde foi criado
        - `telefone` (integer): telefone (sem DDD)
        - `email` (string): email
        - `comprador` (bool): Somente os compradores
        - `credito_loja` (bool): Somente clientes que podem pagar depois
        - `todos` (bool): Inclui todos (inativos e todos os canais)
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Customer.yaml
    post:
      summary: Cria uma pessoa
      operationId: post-customers
      responses:
        '200':
          description: OK
      description: Cadastra uma nova pessoa
      tags:
        - Pessoas (customers)
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Customer.yaml
  /catalogs:
    get:
      summary: Listagem de catálogos
      tags:
        - Categorias (categories)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogo'
      operationId: get-catalogs
      description: Lista de catálogos
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
  /categories:
    get:
      summary: Listagem de Categorias
      tags:
        - Categorias (categories)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
      operationId: get-categories
      description: |-
        Listagem de categorias de produtos. Se o catálogo não for informado é listado o catálogo padrão (Taxonomia). Principais filtros:
        - `id_catalogo` (number) categorias de um catálogo
        - `nivel_categ` (number) categorias de um nível
        - `parent_id` (number) subcategorias de uma categoria
        - `arvore` (bool) catálogo em formato de árvore 
        - `dump` (bool) dump do catálogo completo (use com e inativas) 
        - `inativas` (bool) inclui categorias inativas
        - `vinculavel` (bool) categorias vinculáveis
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Cria uma nova categoria
      operationId: post-categories
      responses:
        '200':
          description: OK
      description: Cria uma nova categoria de produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categoria'
      tags:
        - Categorias (categories)
  /units:
    get:
      summary: Listar unidades
      tags:
        - Unidades de Medida (units)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unidade'
      operationId: get-units
      description: Lista as unidades de medida
    post:
      summary: Criar unidade
      operationId: post-units
      responses:
        '200':
          description: OK
      tags:
        - Unidades de Medida (units)
      description: Cria uma unidade de medida
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unidade'
  /skugroups:
    get:
      summary: Listar Agrupamentos Comerciais
      tags:
        - Agrupamentos (skugroups)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agrup-Comercial'
      operationId: get-skugroups
      description: Listagem de Agrupamentos Comerciais (AC)
    post:
      summary: Criar Agrupamento Comercial
      operationId: post-skugroups
      responses:
        '200':
          description: OK
      description: Cria um novo AC (Agrupamento Comercial)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agrup-Comercial'
      tags:
        - Agrupamentos (skugroups)
  /skugrids:
    get:
      summary: Lista de grades
      tags:
        - Produtos (skus)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grade'
      operationId: get-skugrids
      description: 'Lista de grades. Filtros: `codigo_sku` (number) e `codigo_alfa` (string).'
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criar nova grade
      operationId: post-skugrids
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skus)
      description: Criar nova grade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
  /purchaseorders:
    get:
      summary: Lista Ordens de Compra
      tags:
        - Ordens de Compra (purchaseorders)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/PurchaseOrder.yaml
      operationId: get-purchaseorders
      description: Listagem de OC
    post:
      summary: Cria uma nova OC
      operationId: post-purchaseorders
      responses:
        '200':
          description: OK
      description: Criação de uma nova Ordem de Compra
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/PurchaseOrderGetOne.yaml
      tags:
        - Ordens de Compra (purchaseorders)
  /productimages:
    get:
      summary: Lista de fotos de um produto
      tags:
        - Fotos de Produtos (productimages)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/ProductImage.yaml
      operationId: get-productimages
      description: |-
        Lista de fotos de um produto ou SKU. Filtros:
        - `cod_produto`: código do produto (embalagem)
        - `codigo_sku`: código do SKU
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Envia uma foto de produto
      tags:
        - Fotos de Produtos (productimages)
      responses:
        '200':
          description: OK
      operationId: post-productimages
      description: Envia uma foto (em base64) de um produto.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/ProductImage.yaml
  /operations:
    get:
      summary: Tipos de pedidos (Operações)
      tags:
        - Pedidos (orders)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Operacoes.yaml
      operationId: get-operations
      description: Operações (tipos de pedidos)
  /receptions:
    get:
      summary: Listagem de RN
      tags:
        - Recepção de Nota (receptions)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/RN.yaml
      operationId: get-receptions
      description: Lista as RN
    post:
      summary: Criar uma RN
      tags:
        - Recepção de Nota (receptions)
      responses:
        '200':
          description: OK
      operationId: post-receptions
      description: Cria uma nova RN
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/RN.yaml
    parameters: []
  '/receptions/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id da RN
    get:
      summary: Consulta uma RN
      tags:
        - Recepção de Nota (receptions)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/RN.yaml
      operationId: get-receptions-id
      description: Consulta uma RN
    put:
      summary: Atualiza uma RN
      tags:
        - Recepção de Nota (receptions)
      responses:
        '200':
          description: OK
      operationId: put-receptions-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/RN.yaml
      description: Atualiza uma RN
    delete:
      summary: Cancela uma RN
      tags:
        - Recepção de Nota (receptions)
      responses:
        '200':
          description: OK
      operationId: delete-receptions-id
      description: Cancela uma RN
  '/purchaseorders/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Número da OC
    get:
      summary: Consulta uma Ordem de Compra
      tags:
        - Ordens de Compra (purchaseorders)
      operationId: get-purchaseorders-id
      description: Consulta uma Ordem de Compra
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/PurchaseOrderGetOne.yaml
    put:
      summary: Atualiza uma Ordem de Compra
      tags:
        - Ordens de Compra (purchaseorders)
      responses:
        '200':
          description: OK
      operationId: put-purchaseorders-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/PurchaseOrderGetOne.yaml
      description: Atualiza uma ordem compra
    delete:
      summary: Deleta uma Ordem de Compra
      tags:
        - Recepção de Nota (receptions)
      responses:
        '200':
          description: OK
      operationId: delete-purchaseorders-id
      description: Deleta uma Ordem de Compra
  /purchases:
    get:
      summary: Listagem de NF de Compra
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Purchase.yaml
      operationId: get-purchases
      description: Lista as NF de Compra
      tags:
        - Entrada de NF (purchases)
    post:
      summary: Enviar o XML de uma NF de Compra
      responses:
        '200':
          description: OK
      operationId: post-purchases
      description: Envia o XML de uma NF de Compra
      tags:
        - Entrada de NF (purchases)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  files:
                    - conteudo: xml-da-nota-fiscal-1
                    - conteudo: xml-da-nota-fiscal-2
              properties:
                files:
                  type: array
                  description: Vetor de notas fiscais
                  items:
                    type: object
                    properties:
                      conteudo:
                        type: string
                        description: XML da NFe
                    required:
                      - conteudo
              required:
                - files
  /pricelistarticles:
    post:
      summary: Grava o preço de um item de uma lista de preços
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
      operationId: post-pricelistarticles
      description: Cria um novo preço de um produto em uma lista de preços
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLU-item'
    get:
      summary: Consulta os preços de uma lista de preços
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PLU-item'
      operationId: get-pricelistarticles
      description: |-
        Lista os preços de uma lista de preços. Filtros:
        - `id_plu`: ID do PLU (Lista de Preços)
        - `cod_produto`: Código de um produto
        - `desc_produto`: Descrição de produto
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
  /deliverytypes:
    get:
      summary: Lista de Meios de Entrega
      tags:
        - Meios de Entrega (deliverytypes)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/DeliveryType.yaml
      operationId: get-deliverytypes
      description: Lista de Meios de Entrega
    post:
      summary: Cadastra um Meio de Entrega
      tags:
        - Meios de Entrega (deliverytypes)
      responses:
        '200':
          description: OK
      operationId: post-deliverytypes
      description: Cadastra um Meio de Entrega
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/DeliveryType.yaml
  /stocksummaries:
    get:
      summary: Consulta estoque de SKU por prédio
      tags:
        - Estoque (skustocks)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/StockSummary.yaml
      operationId: get-stocksummaries
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      description: |-
        Estoque de SKU por prédio. Filtros:
        - `codigo_sku`: código do SKU
  /carriers:
    get:
      summary: Consulta lista de transportadoras
      tags:
        - Transportadoras (carriers)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Carrier.yaml
      operationId: get-carriers
      description: Lista de transportadoras
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Cria uma transportadora
      tags:
        - Transportadoras (carriers)
      responses:
        '200':
          description: OK
      operationId: post-carriers
      description: Cria uma transportadora
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Carrier.yaml
  '/carriers/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID da transportadora
    get:
      summary: Consulta uma transportadora
      tags:
        - Transportadoras (carriers)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Carrier.yaml
      operationId: get-carriers-id
      description: Consulta uma transportadora
    put:
      summary: Atualiza uma transportadora
      tags:
        - Transportadoras (carriers)
      responses:
        '200':
          description: OK
      operationId: put-carriers-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Carrier.yaml
        description: ''
      description: Atualiza uma transportadora
    delete:
      summary: Inativar uma transportadora
      tags:
        - Transportadoras (carriers)
      responses:
        '200':
          description: OK
      operationId: delete-carriers-id
      description: Deleta (inativa) uma transportadora
  /suppliers:
    post:
      summary: Cria um Fornecedor
      tags:
        - Fornecedores (suppliers)
      responses:
        '200':
          description: OK
      operationId: post-suppliers
      description: Cria um novo fornecedor
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Supplier.yaml
        description: ''
    get:
      summary: Lista de Fornecedores
      tags:
        - Fornecedores (suppliers)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Supplier.yaml
      operationId: get-suppliers
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      description: Lista de Fornecedores
  '/suppliers/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID do Fornecedor
    get:
      summary: Consulta um Fornecedor
      tags:
        - Fornecedores (suppliers)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Supplier.yaml
      operationId: get-suppliers-id
      description: Consulta um Fornecedor
    put:
      summary: Atualiza  um Fornecedor
      tags:
        - Fornecedores (suppliers)
      responses:
        '200':
          description: OK
      operationId: put-suppliers-id
      description: Atualiza  um Fornecedor
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Supplier.yaml
    delete:
      summary: Inativa um Fornecedor
      tags:
        - Fornecedores (suppliers)
      responses:
        '200':
          description: OK
      operationId: delete-suppliers-id
      description: Inativa um Fornecedor
  /purchaseitems:
    get:
      summary: Lista de itens de uma NF de Fornecedor
      tags:
        - Entrada de NF (purchases)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/PurchaseItem.yaml
      operationId: get-purchaseitems
      description: 'Itens de uma NF de Fornecedor. Filtro obrigatório: `id_compra` (ID da purchases).'
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
  '/purchaseitems/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID do item da NF
    put:
      summary: Mapeamento/desdobramento de item de NF
      tags:
        - Entrada de NF (purchases)
      responses:
        '200':
          description: OK
      operationId: put-purchaseitems-id
      description: |-
        Permite fazer o mapeamento e/ou desdobramento dos itens de uma NF (que foi carregada via XML).
        - Mapeamento: cruzamento entre `cProd` que vem no XML com `cod_produto` do sistema. O vínculo é feito em nível de SKU: quantidade (campo `quant_sku`) e valor unitário (campo `vunit_sku`) serão calculados automaticamente. 
        - Desdobramento: quando um Fornecedor manda um único item contendo produtos diferentes, por exemplo vem na NF "100 camisetas de cores sortidas" mas na verdade vieram 20 vermelhas, 30 amarelas e 50 brancas.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/PurchaseItem.yaml
    get:
      summary: Consulta um item de uma NF
      tags:
        - Entrada de NF (purchases)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/PurchaseItem.yaml
      operationId: get-purchaseitems-id
      description: 'Consulta um item de uma NF. Se ele estiver mapeado, "codigo_sku" está presente. Se ele tiver desdobramentos, o array "desdobramento" estará preenchido.'
  /ordercheckitems:
    get:
      summary: Lista de SKU separados/conferidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/OrderCheckItem.yaml
      operationId: get-ordercheckitems
      description: Lista de SKU de um pedido para separação. O filtro `numero_pedido` é obrigatório.
      parameters:
        - $ref: '#/components/parameters/Filter'
      tags:
        - Pedidos por SKU (orderchecks)
  /services:
    get:
      summary: Listagem de serviços
      tags:
        - Serviços (services)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Services.yaml
      operationId: get-services
      description: Lista de serviços ativos
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Cria um novo serviço
      tags:
        - Serviços (services)
      responses:
        '200':
          description: OK
      operationId: post-services
      description: Cria um novo serviço
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Services.yaml
  '/ordercheckitems/{numped}':
    parameters:
      - schema:
          type: string
        name: numped
        in: path
        required: true
        description: Número do pedido
    put:
      summary: Conferência de saída
      tags:
        - Pedidos por SKU (orderchecks)
      responses:
        '200':
          description: OK
      operationId: put-ordercheckitems-numped
      description: 'Confere um item de um pedido, colocando-o dentro de um volume.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  orderid: 0
                  codigo: 0
                  qtd_conf: 0
                  volume: 0
                  qtd_vol: 0
              properties:
                codigo:
                  type: integer
                  description: Código de barras ou código do produto
                  writeOnly: true
                qtd_conf:
                  type: integer
                  description: Quantidade conferida
                  default: 1
                  writeOnly: true
                volume:
                  type: integer
                  description: Volume onde o SKU conferido será empacotado
                  writeOnly: true
              required:
                - codigo
                - volume
  '/purchases/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID da compra
    put:
      summary: Atualiza uma NF de Compra
      tags:
        - Entrada de NF (purchases)
      responses:
        '200':
          description: OK
      operationId: put-purchases-id
      description: Atualiza uma NF de compra
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Purchase.yaml
    get:
      summary: Carrega uma NF de Compra
      tags:
        - Entrada de NF (purchases)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Purchase.yaml
      operationId: get-purchases-id
      description: Consulta uma NF de compra
  '/invoices/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Faz o download de um XML
      tags:
        - Notas/Cupons Fiscais (invoices)
      responses:
        '200':
          description: OK
      operationId: get-invoices-id
      description: Faz o dowload de um XML
components:
  securitySchemes:
    Usuário/Senha:
      type: http
      scheme: basic
      description: 'Usuário, Conta(tenant) e senha, ex: admin@zezinho:zeus'
    Token de acesso:
      type: http
      scheme: bearer
      description: ''
  requestBodies: {}
  schemas:
    Grade:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 209711
          id_marca: 1464
          id_categ: 4563
          caminho: PASTA > PASTAS SANFONADAS > PASTA SANFONADA DUPLICATA > PASTA SANFONADA DUPLICATA 31 DIVI PERCALUX
          ativo: false
          marca: '-'
          orig: 0
          id_classe: 3
          trib: ICMS
          cst: 60
          aliq_ipi: 10
          ncm: '00000000'
          cest: ''
          codigo_alfa: G31013
          desc_basica: PASTA SANFONADA TRANSP DUPLIC 31DIV FUME COD31013
      properties:
        id:
          type: number
        id_marca:
          type: number
        id_categ:
          type: number
          description: Categoria da Taxonomia. Ao não informar aparece a mensagem "Categoria % (grade.id_categ) não localizada" e se informar uma categoria que não é do tipo taxonomia então aparecerá a mensagem "Categoria % (grade.id_categ) não é do tipo taxonomia"
        ativo:
          type: boolean
        caminho:
          type: string
          minLength: 1
        marca:
          type: string
          minLength: 1
        orig:
          type: number
        id_classe:
          type: number
        trib:
          type: string
          minLength: 1
        cst:
          type: number
        aliq_ipi:
          type: number
        ncm:
          type: string
          minLength: 1
        cest:
          type: string
        codigo_alfa:
          type: string
          minLength: 1
        desc_basica:
          type: string
          minLength: 1
      required:
        - id
        - id_categ
        - ativo
        - marca
        - orig
        - id_classe
        - cst
        - ncm
        - cest
    PLU:
      description: Lista de Preços (Price LookUp)
      type: object
      x-examples:
        example-1:
          id: 212
          precedencia: 150
          nome_lista: Preço Amazon
          percentual_desconto: 0
          canais:
            - id_canal: 114
              desc_canal: Amazon Supriagora
      properties:
        id:
          type: number
        precedencia:
          type: number
          description: Ordem de precedência em caso de empate
        nome_lista:
          type: string
        percentual_desconto:
          type: number
        canais:
          type: array
          uniqueItems: true
          minItems: 1
          description: Lista de canais atendidos
          items:
            type: object
            properties:
              id_canal:
                type: number
                description: ''
              desc_canal:
                type: string
            required:
              - id_canal
              - desc_canal
      required:
        - id
        - precedencia
        - nome_lista
        - canais
    PLU-item:
      description: Item de um PLU (cruzamento Produto x PLU)
      type: object
      x-examples:
        example-1:
          id: 631220
          id_plu: 201
          cod_produto: 126924
          ucom: CX
          prod_xprod: CAFE MELITTA CAPSULA COMPATIVEL 50G 10UN AUDACCE
          preco_tabela: 21.25
          margem_cliente: 15
          preco_cliente: 21.25
          sku_ativo: true
      properties:
        id:
          type: number
        id_plu:
          type: number
          description: ID do PLU
        cod_produto:
          type: number
        ucom:
          type: string
        prod_xprod:
          type: string
        preco_tabela:
          type: number
          description: Preço de tabela
        preco_cliente:
          type: number
          description: Preço do produto nesse PLU
        margem_cliente:
          type: number
        sku_ativo:
          type: boolean
      required:
        - id
        - id_plu
        - cod_produto
    Pessoa-Categoria:
      description: Cruzamento pessoa x categoria
      type: object
      x-examples:
        example-1:
          id: 5
          desc_categoria: ATACADO
          plu_id: 214
          categ_mae: null
      title: Pessoa Categoria
      properties:
        id:
          type: number
        desc_categoria:
          type: string
        plu_id:
          type: number
        categ_mae:
          type: number
          description: Também conhecido como a categoria pai (árvore hierárquica)
      required:
        - id
    Empresa:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 1
          nome_reduzido: VOLUNTARIOS
          sigla_loja: VLT
          id_pessoa: 9778001
          nome_razao: BELLER COMERCIO DE PAPEIS LTDA.
          nome_municipio: Porto Alegre
          uf: RS
          utiliza_pdv: true
          cnpj_padrao: 5563868000113
          loja_aberta: true
          id_canal: 49
          desc_canal: VLT
          lista_pedidos:
            - id_empresa: 1
              sigla: VLT
          id_predio: 5
      properties:
        id:
          type: number
        nome_reduzido:
          type: string
          maxLength: 20
          description: ''
        sigla_loja:
          type: string
          maxLength: 6
        id_pessoa:
          type: number
          description: ID da pessoa (geralmente jurídica) da empresa
        nome_razao:
          type: string
          description: Nome/Razão Social da pessoa da empresa
        nome_municipio:
          type: string
          description: Município do endereço-sede da pessoa da empresa
        uf:
          type: string
          description: UF do endereço-sede da pessoa da empresa
        utiliza_pdv:
          type: boolean
          description: Utiliza o aplicativo PDV (emite NFCe)
        cnpj_padrao:
          type: number
          description: 'Ao carregar um XML a empresa emitente é determinada por este campo, que é UNIQUE se preenchido.'
        loja_aberta:
          type: boolean
          description: Quando FALSE nenhum usuário pode fazer login nela.
        id_canal:
          type: number
          description: Canal padrão das vendas feitas por esta loja
        desc_canal:
          type: string
        lista_pedidos:
          type: array
          uniqueItems: true
          description: Lista (opcional) de outras empresas cujos pedidos serão visualizados juntamente com os pedidos dessa empresa
          items:
            type: object
            properties:
              id_empresa:
                type: number
              sigla:
                type: string
            required:
              - id_empresa
        id_predio:
          type: number
          description: 'Prédio do Estoque (vendas, separação, etc)'
      required:
        - id
        - nome_reduzido
        - sigla_loja
        - id_pessoa
        - utiliza_pdv
        - id_canal
        - lista_pedidos
    Marca:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 5766
          nome_marca: REGISPEL
          marca_ativa: true
          produtos: 16
      properties:
        id:
          type: number
        nome_marca:
          type: string
          minLength: 1
        marca_ativa:
          type: boolean
        produtos:
          type: number
      required:
        - id
        - nome_marca
    Predio-Estoque:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 7
          desc_predio: PADRE CHAGAS
          address_id: 1052519
          logradouro: Rua Padre Chagas
          numero: 52
          nome_municipio: Porto Alegre
          uf: RS
          empresas:
            - id: 7
              sigla_loja: PCH
          config_predio: {}
      properties:
        id:
          type: number
        desc_predio:
          type: string
          minLength: 1
        address_id:
          type: number
        logradouro:
          type: string
          minLength: 1
        numero:
          type: number
        nome_municipio:
          type: string
          minLength: 1
        uf:
          type: string
          minLength: 1
        empresas:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              id:
                type: number
              sigla_loja:
                type: string
                minLength: 1
        config_predio:
          type: object
        cdist:
          type: boolean
        legado:
          type: boolean
      required:
        - id
        - desc_predio
    Forma-Quitacao:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 1
          sigla_forma: DIN
          desc_forma: DINHEIRO
          tpag: 1
          forma_ativa: true
          config_forma: {}
      properties:
        id:
          type: number
        sigla_forma:
          type: string
        desc_forma:
          type: string
          minLength: 1
        codigo_forma:
          type: integer
          description: Esse campo não é obrigatório (campo opcional)
        tpag:
          type: number
        forma_ativa:
          type: boolean
        config_forma:
          type: object
          properties:
            '':
              type: string
      required:
        - id
        - sigla_forma
        - desc_forma
        - forma_ativa
    Sku-Composicao:
      type: object
      x-examples:
        example-1:
          id: 16930
          codigo_sku: 134106
          cod_produto: 134010
          prod_xprod: MARCA TEXTO CIS LUMINI INK AMARELO
          quantidade: 370
      properties:
        id:
          type: integer
        codigo_sku:
          type: integer
        cod_produto:
          type: integer
        prod_xprod:
          type: string
        quantidade:
          type: number
      description: 'Composição de um SKU. Ex: Display'
    Conta-Despesa:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 12
          codigo_conta: 2
          conta_contabil: '2.20'
          desc_conta: FORNECEDOR
          conta_ativa: true
          config_conta: null
          padrao_compra: true
      properties:
        id:
          type: number
        codigo_conta:
          type: number
        conta_contabil:
          type: string
          minLength: 1
          maxLength: 20
        desc_conta:
          type: string
          minLength: 1
          maxLength: 40
        conta_ativa:
          type: boolean
        config_conta: {}
        padrao_compra:
          type: boolean
          description: Somente uma conta pode ser padrão
      required:
        - id
        - conta_contabil
        - desc_conta
        - conta_ativa
    Endereco:
      description: Endereço de uma pessoa
      type: object
      x-examples:
        example-1:
          id: 984115
          id_pessoa: 9778001
          id_endereco: 132189034
          id_tipo: 24
          desc_tipo: SEDE
          logradouro: RUA VOLUNTÁRIOS DA PÁTRIA
          numero: 547
          complemento: LOJA CASA DO PAPEL
          bairro: CENTRO HISTÓRICO
          cidade: Porto Alegre
          uf: RS
          cep: '90030003'
          cmun: 4314902
          sede: true
          ativo: true
          codigo_pais: 1058
          nome_pais: BRASIL
          sigla_loja: VLT
          nome_reduzido: VOLUNTARIOS
      properties:
        id:
          type: number
        id_pessoa:
          type: number
        id_endereco:
          type: number
          description: ID numérico do endereço no sistema legado (opcional)
        id_tipo:
          type: number
          description: ID do Tipo de endereço
        desc_tipo:
          type: string
          description: ID do Tipo de endereço
        logradouro:
          type: string
        numero:
          type: number
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        uf:
          type: string
        cep:
          type: string
          minLength: 8
          maxLength: 8
        cmun:
          type: number
          description: Código IBGE do Município
        sede:
          type: boolean
          description: Informar TRUE se for a SEDE da pessoa física ou jurídica
        ativo:
          type: boolean
        codigo_pais:
          type: number
        nome_pais:
          type: string
        sigla_loja:
          type: string
          description: 'Se for a sede de uma empresa (loja), traz a sigla'
        nome_reduzido:
          type: string
          description: 'Se for a sede de uma empresa (loja), traz o nome'
      required:
        - id_pessoa
        - id_tipo
        - logradouro
        - bairro
        - cep
        - cmun
        - sede
        - ativo
      title: ''
    SKU-Mapeamento:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 2150
          cnpj_fornec: 4402277000100
          cod_produto: 43091
          referencia: '930819'
          variacao: ''
          codigo_sku: 282
      properties:
        id:
          type: number
        cnpj_fornec:
          type: number
          description: CNPJ do fornecedor (emitente da NF)
        cod_produto:
          type: number
          description: Código do produto
        referencia:
          type: string
          minLength: 1
          description: Referência (tag cProd da NF)
        variacao:
          type: string
          description: Variação na descrição (pode estar em branco)
        codigo_sku:
          type: number
          description: Código do SKU deste produto
      required:
        - cnpj_fornec
        - cod_produto
        - referencia
        - variacao
    SKU-Configs:
      description: Configuração logística de um SKU
      type: object
      x-examples:
        example-1:
          id: 105840
          id_empresa: 7
          sigla_loja: XXX
          nome_reduzido: NOME FILIAL
          codigo_sku: 123456
          quant_mes: 278
          ticket_mes: 206
          valor_mes: 6606.44
          quant_natural: 278
          sazo_efet: 360
          expo: 1
          total_sazo: 1200
          cmmf_quant: 150
          cmmf_validade: '2022-02-11'
          ultima_venda: '2021-11-01'
          data_hora: '2021-11-04T00:13:46-03:00'
      properties:
        id:
          type: number
          default: 0
          example: 80095
        id_empresa:
          type: number
        sigla_loja:
          type: string
          minLength: 1
          readOnly: true
        nome_reduzido:
          type: string
          minLength: 1
          readOnly: true
        codigo_sku:
          type: number
          description: Código do produto SKU base
        dias_estoq:
          type: number
          description: Dias Com Estoque (DCE)  (Campo calculado / Somente Leitura)
          readOnly: true
        quant_mes:
          type: number
          description: CMM efetivo (CMM ou CMMF) - (Campo calculado / Somente Leitura)
          readOnly: true
        ticket_mes:
          type: number
          description: Quantidade de Tickets (ajustada) - (Campo calculado / Somente Leitura)
          readOnly: true
        valor_mes:
          type: number
          description: Valor Acumulado vendido - (Campo calculado / Somente Leitura)
          readOnly: true
        quant_natural:
          type: number
          description: CMM natural (calculado) - (Campo calculado / Somente Leitura)
          readOnly: true
        expo:
          type: number
          description: 'Exposição (EXPO), geralmente 1 ou 0'
        sazo_efet:
          type: number
          description: Sazonal efetivo (já com potência sazonal aplicada)
        total_sazo:
          type: number
          description: Sazonal 100% (SAZO)
        es_minimo:
          type: integer
          description: Estoque de Segurança Mínimo (por loja)
        cmmf_quant:
          type: number
        cmmf_validade:
          type: string
          minLength: 1
        ultima_venda:
          type: string
          minLength: 1
          readOnly: true
        data_hora:
          type: string
          minLength: 1
          readOnly: true
      required:
        - id
        - id_empresa
        - codigo_sku
    Classe-Fiscal:
      description: |
        Impostos por produto (ICMS, IPI, PIS e COFINS)

        Ver regra das prioridades do CFOP em: https://rednaxel.freshdesk.com/support/solutions/articles/47001200096-regras-do-cfop/preview
      type: object
      x-examples:
        example-1:
          id: 2
          id_tributo_fk: ICMS
          cst: 0
          desc_trib: TRIB. INTEGRAL
          cfop_nfce: 5102
          modbc: 3
          modbc_st: 4
          predbc_st: 100
          csosn: 102
          config_classe: {}
      properties:
        id:
          type: number
        id_tributo_fk:
          type: string
          minLength: 1
          example: ICMS
          description: 'Campo em conjunto como cst. Pode ser: ICMS, CSOSN, PIS, COFINS, IPI, ISSQN'
        cst:
          type: number
          description: Campo em conjunto com o id_tributo_fk
          example: 51
        desc_trib:
          type: string
          minLength: 1
        cfop_nfce:
          type: number
        modbc:
          type: number
        modbc_st:
          type: number
        predbc_st:
          type: number
        csosn:
          type: number
        config_classe:
          type: object
          properties:
            texto_legislacao:
              type: string
            nfe_cbenef:
              type: string
            sem_credito_pis_cofins:
              type: boolean
            cfop:
              type: integer
        csosn_manual:
          type: integer
        picms:
          type: number
        predbc:
          type: number
        cst_ipi:
          type: number
        cst_pis:
          type: number
        cst_cofins:
          type: number
      required:
        - id
        - id_tributo_fk
    Catalogo:
      description: Catálogo de categorias
      type: object
      x-examples:
        example-1:
          id: 21
          nome_catalogo: Taxonomia
          padrao: true
          eh_taxonomia: true
          ativo: true
      properties:
        id:
          type: number
        nome_catalogo:
          type: string
          minLength: 1
        padrao:
          type: boolean
          description: Somente um catálogo pode ser o padrão
        eh_taxonomia:
          type: boolean
          description: Quando um catálogo é do tipo Taxonomia suas categorias podem ser usadas na taxonomia dos produtos
        ativo:
          type: boolean
      required:
        - id
        - nome_catalogo
        - padrao
        - eh_taxonomia
        - ativo
    Categoria:
      description: Categoria de produto
      type: object
      x-examples:
        example-1:
          id: 10005
          nivel_categ: 1
          breadcrumb: Festas > Natal
          desc_categoria: Natal
          parent_id: 20929
          ativa: true
          id_catalogo: 27
      properties:
        id:
          type: number
        nivel_categ:
          type: number
          description: Nível na árvore (automático)
        breadcrumb:
          type: string
          minLength: 1
          description: Caminho desde a raiz
        desc_categoria:
          type: string
          minLength: 1
          description: Descrição
        parent_id:
          type: number
          description: ID da categoria da qual essa categoria é filha
        ativa:
          type: boolean
        id_catalogo:
          type: number
          description: ID do catálogo ao qual essa categoria pertence
      required:
        - desc_categoria
        - id_catalogo
    Unidade:
      description: Unidade de medida
      type: object
      x-examples:
        example-1:
          id: 187
          ucom: AA
          desc_unidade: teaaa
          casas_decimais: 4
      properties:
        id:
          type: number
        ucom:
          type: string
          minLength: 1
          description: 'Abreviatura (ex: PCT)'
        desc_unidade:
          type: string
          minLength: 1
          description: 'Descrição (ex: PACOTE)'
        casas_decimais:
          type: number
          description: 'Quando informado, permite quantidades fracionadas'
      required:
        - id
        - ucom
        - desc_unidade
    Agrup-Comercial:
      description: Agrupamento Comercial
      type: object
      x-examples:
        example-1:
          id: 14
          codigo_agrup: I
          desc_agrupamento: ICONE
          unico: true
      properties:
        id:
          type: number
        codigo_agrup:
          type: string
          minLength: 1
        desc_agrupamento:
          type: string
          minLength: 1
        unico:
          type: boolean
      required:
        - id
        - codigo_agrup
        - desc_agrupamento
  parameters:
    Filter:
      name: filter
      in: query
      required: false
      schema:
        type: string
      description: Filtros
    Range:
      name: range
      in: query
      required: true
      schema:
        type: array
        default:
          - 0
          - 9
      description: Paginação
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: array
        default:
          - id
          - DESC
      description: Ordenação
security:
  - Token de acesso: []
