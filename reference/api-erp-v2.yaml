openapi: 3.0.0
servers:
  - url: 'https://homolog.rnge.com.br:8091/v2'
    description: Homologação
  - url: 'https://rnge.com.br:8091/v2'
    description: Produção
tags:
  - name: Login
    description: Login
  - name: Pessoas (customers)
    description: Cadastro de Pessoas
  - name: Pessoa (customercategories)
    description: Categorias de Pessoas
  - name: Endereços de pessoas (addresses)
    description: Endereços de Pessoas
  - name: Empresas (companies)
    description: Cadastro de Empresas
  - name: Categorias (categories)
    description: Categorias de produtos
  - name: Produtos (skuarticles)
    description: Cadastro de Mercadorias
  - name: Produtos (skus)
    description: Cadastro de SKUs
  - name: Produtos (skugrids)
    description: Cadastro de Grades
  - name: Produtos (skuconfigs)
    description: Cadastro de configuração de SKU x Empresa
  - name: Mapeamentos (purchasemappings)
    description: Mapeamentos Produto x Fornecedor
  - name: Listas de Preços (pricelists)
    description: Listas de Preços
  - name: Estoque (skustocks)
    description: Controle de Estoque
  - name: Pedidos (orders)
    description: Gestão de Pedidos
  - name: Notas/Cupons Fiscais (invoices)
    description: Notas e Cupons Fiscais (NFe/NFCe)
  - name: PDV
    description: Equipamento PDV
  - name: Distribuição (distributions)
    description: Distribuição para filiais
  - name: Tributária (Classe Fiscal)
    description: Cadastro das classes fiscais
  - name: Prédios de Estoque
    description: Cadastro dos prédios de estoque
  - name: Marcas
    description: Cadastro das marcas dos produtos
info:
  description: |
    Utilizamos o **Authorization** de duas formas:
    - No `POST /login`, **Basic** com username = `usuario@tenant` e password = `senha`
    - Nos demais recursos utilizar **Bearer** `token` (obtido no login)

    ## Definições

    **Tenant\:** Conta do cliente na Rednaxel. O tenant pode ter uma ou empresas que podem ser filiais (mesma raiz de CNPJ) ou não.

    **Usuário\:** Cada usuário pertence a um tenant e tem um `user_id` global e um `nome_usuario` único dentro do tenant.

    ## Padrões

    Todos os GET usam os parâmetros "filter", "sort" e "range" da seguinte forma:

     | Parâmetro  | Formato | URL Query                              | SQL equivalente       |
     |------------|---------|----------------------------------------|-----------------------|
     | filter     |  JSON   | GET v2/resources?filter={"store":34}   | ... WHERE store = 34  |
     | sort       |  CSV    | GET v2/resources?sort=\["name","ASC"\] | ... ORDER BY name asc |
     | range      |  CSV    | GET v2/resources?range=\[0,9\]         | ... OFFSET 0 LIMIT 10 |


    Esta API utiliza o padrão REST e autenticação HTTP AuthBasic (RFC 7617) em todos os recursos. O formato padrão de requisição e resposta é o JSON na maioria dos recursos; as exceções são os que trabalham com Notas Fiscais (XML) ou documentos para impressão (PDF).
  version: 2.0.0
  title: API do RNGE 4
  termsOfService: 'https://rednaxel.com/termos-de-uso'
  contact:
    name: Suporte
    email: suporte@rednaxel.com
    url: 'https://suporte.rednaxel.com'
  x-logo:
    url: 'https://storage.googleapis.com/rednaxel-dados/rednaxel-264.png'
    altText: Logo da Rednaxel
paths:
  /login:
    parameters: []
    post:
      summary: Efetuando login
      operationId: post-login
      responses:
        '200':
          description: Os campos `user_id` e `token` devem ser usados nas chamadas seguintes.
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: 1561144325
                    user_id: 10023
                    token: 89a1e75e-87da-400a-9899-7ca1a170667c
                    logo_color: '#404040'
                    font_color: '#FFFFFF'
                    homologacao: true
                properties:
                  id:
                    type: number
                    description: ID do login
                  user_id:
                    type: number
                    description: ID do Usuário
                  token:
                    type: string
                    description: Token de acesso
                  logo_color:
                    type: string
                    description: Cor de fundo (frontend)
                  font_color:
                    type: string
                    description: Cor da letra (frontend)
                  homologacao:
                    type: boolean
                    description: Servidor de homologação ou produção?
                required:
                  - user_id
                  - token
      parameters: []
      description: |
        Efetua o login com `usuario@tenant` e `senha` para obter UserID e Token. Se o `id_empresa` não for informado o login será feito na *empresa padrão* do usuário. 
      security:
        - Usuário/Senha: []
      tags:
        - Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                end_ip:
                  type: string
                  description: IP interno para suporte
                id_empresa:
                  description: ID da empresa onde será feito o login
                  type: integer
  '/tokens/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Informações do token
      tags:
        - Login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: 1564931602
                    user_id: 10023
                    nome_razao: Alexsander Da Rosa
                    loja: 10
                    nome_loja: ADMINISTRATIVO
                    id_predio: 13
                    nome_usuario: ALEXSANDER
                    conta: cdp
                    url_logo: 'https://storage.googleapis.com/rednaxel-fotos/cdp/logo/web.png'
                    user_email: alexsander.rosa@gmail.com
                    picture_url: 'https://lh6.googleusercontent.com/-1_ZMsIBah1w/AAAAAAAAAAI/AAAAAAAAkkk/0C-voD9hwsk/photo.jpg'
                    ip_externo: 177.101.216.158
                    versao: (Linux 64) Chrome/92
                    ult_oper: '2021-08-19T18:25:30-03:00'
                    cmun: 4314902
                    nome_municipio: Porto Alegre
                    uf: RS
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  nome_usuario:
                    type: string
                    description: Nome do usuário logado
                  user_email:
                    type: string
                    description: Email do usuário logado
                  picture_url:
                    type: string
                    description: URL da foto do usuário logado
                  loja:
                    description: ID da empresa onde foi efetuado o login
                    type: integer
                  nome_razao:
                    type: string
                    description: Nome/Razão Social da empresa onde foi efetuado o login
                  nome_loja:
                    type: string
                    description: Nome reduzido da empresa onde foi efetuado o login
                  id_predio:
                    type: integer
                    description: ID do prédio da empresa logada
                  cmun:
                    type: integer
                    description: Código do município (IBGE) da sede da empresa logada
                  uf:
                    type: string
                    description: UF (estado) da sede da empresa logada
                  nome_municipio:
                    type: string
                    description: Nome do município da sede da empresa logada
                  conta:
                    type: string
                    description: Conta (tenant) do usuário
                  url_logo:
                    type: string
                    description: URL do logotipo do tenant
                  ip_externo:
                    type: string
                    description: IP de onde foi efetuado o login
                  versao:
                    type: string
                    description: Versão do navegador (ou outro app frontend)
                  ult_oper:
                    type: string
                    description: Data/hora da última requisição
        '201':
          description: Created
      operationId: get-tokens-id
      description: Obtém informações do login atual
      parameters: []
  /ping:
    get:
      summary: Verificando servidor
      tags:
        - Login
      operationId: get-ping
      description: Verifica se o servidor está online
      security: []
      responses:
        '200':
          description: Sucesso
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    resp: OK
                properties:
                  resp:
                    type: string
                    minLength: 1
                    description: Resposta (OK)
                required:
                  - resp
              examples:
                JSON:
                  value:
                    resp: OK
    parameters: []
  /cashiers:
    get:
      tags:
        - PDV
      summary: Listando PDVs
      description: Lista de Equipamentos PDV de todas as lojas (companies) do tenant
      parameters:
        - name: filter
          in: query
          description: Filters for the query
          schema:
            type: string
        - name: range
          in: query
          description: Paging
          schema:
            type: array
            items:
              type: integer
        - schema:
            type: string
            default: Basic MTIzNDp1dWlkLXRva2Vu
          in: header
          name: Authorization
          required: true
          description: 'ID:TOKEN'
      operationId: get-cashiers
      responses:
        '200':
          description: OK
    post:
      tags:
        - PDV
      summary: Criando PDV
      description: Cria novo PDV
      operationId: post-cashiers
      responses:
        '200':
          description: OK
    parameters: []
  '/cashiers/{id}':
    get:
      tags:
        - PDV
      summary: Consultando um PDV
      description: Consulta PDV
      parameters:
        - schema:
            type: string
            default: Basic MTIzNDp1dWlkLXRva2Vu
          in: header
          description: 'ID:TOKEN'
          required: true
          name: Authorization
      operationId: get-cashiers-id
      responses:
        '200':
          description: OK
    put:
      tags:
        - PDV
      summary: Atualizando um PDV
      description: Atualiza um PDV
      responses:
        '200':
          description: Success!
        '400':
          description: Error
      operationId: put-cashiers-id
    delete:
      tags:
        - PDV
      summary: Deletando um PDV
      description: Deleta um PDV
      responses:
        '200':
          description: Info about deleted POS
        '400':
          description: Error
      operationId: delete-cashiers-id
    parameters:
      - schema:
          type: integer
          minimum: 1
          default: 1
        name: id
        in: path
        required: true
        description: ID do PDV
  /orders:
    get:
      tags:
        - Pedidos (orders)
      summary: Listando pedidos
      description: Lista de pedidos
      parameters:
        - name: filter
          in: query
          description: |
            - ids_empresas: `integer[]`
            - id_destino: `integer`
            - meus_pedidos: `boolean`
            - dias: `integer`
          schema:
            type: object
        - name: range
          in: query
          description: Paginação
          schema:
            type: array
      operationId: get-orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
    post:
      tags:
        - Pedidos (orders)
      summary: Criando um novo pedido
      description: Cria um novo pedido
      operationId: post-orders
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
    parameters: []
  /skus:
    get:
      summary: Listando produtos (SKUs)
      tags:
        - Produtos (skus)
      operationId: get-skus
      description: |
        Lista de produtos

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | codigo | int64 | código do Produto (SKU)| 
        | id_categ | int64 | ID da categoria produto | 
        | inativos | bool |  padrão é filtrar somente os ativos| 
        | ncm_vencido | bool |  fim da vigência menor que a data atual| 
        | q | string | descrição do produto | 
        | fornecedor | string | nome do fornecedor | 
        | numero_pedido | int64 | produtos que estão nesse pedido| 
        | barcode | int64 | código de barras (pode ser Produto ou Endereço de Estoque) | 
        | id_grade | int64 |  Código da grade de produto (variações) |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU'
    post:
      summary: Criando um produto (SKU)
      operationId: post-skus
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU'
      description: Cria um SKU
      tags:
        - Produtos (skus)
  /customercategories:
    get:
      summary: Listando Pessoa Categoria (customercategories)
      operationId: get-customercategories
      description: |
        Lista da Pessoa Categoria

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | ID | int64 | código da categoria pessoa| 
        | IDs | []int64 | vetor do código da categoria pessoa| 
        | desc_categoria | string | Descrição da categoria pessoa | 
      parameters:
        - in: query
          name: filter
          description: Filtro
          schema:
            default: '{"id":5}'
            example: '{"id":5}'
          required: true
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa-Categoria'
      tags:
        - Pessoa (customercategories)
    post:
      summary: Criando uma Pessoa Categoria (customercategories)
      operationId: post-customercategories
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pessoa-Categoria'
      description: Cria uma pessoa categoria
      tags:
        - Pessoa (customercategories)
    parameters: []
  '/customercategories/{id}':
    get:
      summary: Consultando uma Pessoa Categoria (customercategories)
      operationId: get-customercategories-id
      parameters: []
      description: Mostra uma pessoa categoria já existente
      tags:
        - Pessoa (customercategories)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa-Categoria'
    put:
      summary: Atualizando uma Pessoa Categoria  (customercategories)
      operationId: put-customercategories-id
      responses:
        '200':
          description: OK
      description: Atualiza uma pessoa categoria já existente
      tags:
        - Pessoa (customercategories)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pessoa-Categoria'
    delete:
      summary: Excluindo uma Pessoa Categoria (customercategories)
      operationId: delete-customercategories-id
      responses:
        '200':
          description: OK
      description: Exclui uma pessoa categoria já existente.
      tags:
        - Pessoa (customercategories)
    parameters:
      - schema:
          type: integer
          default: 100
          example: 100
        name: id
        in: path
        description: ID que representa a configuração do sku x empresa
        required: true
  /skuconfigs:
    get:
      summary: Listando Configuração do sku X empresa (SkuConfigs)
      operationId: get-skuconfigs
      description: |
        Lista de configuração de sku x empresa (mostra também o cmm (consumo médio mensal))

        A entidade é constituída de duas partes:
        1) os campos da fórmula do CMM ( SOMENTE LEITURA pois é calculado). São eles:
          - dias_estoq, quant_mes, ticket_mes, valor_mes, qtd_natural 

        2) os campos da configuração ( EDITADOS). São eles: 
          - sazo_efet, quant_expo, total_sazo, es_minimo, quant_camp, cmmf_quant, cmmf_validade

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | codigo_sku | int64 | código do Produto (SKU)| 
        | id_empresa | int64 | ID da empresa | 
      parameters:
        - in: query
          name: filter
          description: Filtro
          schema:
            default: '{"codigo_sku":5}'
            example: '{"codigo_sku":5,"id_empresa":1}'
          required: true
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU-Configs'
      tags:
        - Produtos (skuconfigs)
    post:
      summary: Criando configuração do sku X empresa (SKUConfigs)
      operationId: post-skuconfigs
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Configs'
      description: 'Cria um SKUConfig '
      tags:
        - Produtos (skuconfigs)
    parameters: []
  '/skuconfigs/{id}':
    get:
      summary: Consultando uma configuração do sku X empresa  (SKUconfigs)
      operationId: get-skusconfigs-id
      parameters: []
      description: Mostra um skuconfig já existente
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU-Configs'
              examples:
                example-1:
                  value:
                    id: 80095
                    id_empresa: 0
                    sigla_loja: string
                    nome_reduzido: string
                    codigo_sku: 0
                    dias_estoq: 0
                    quant_mes: 0
                    ticket_mes: 0
                    valor_mes: 0
                    quant_natural: 0
                    expo: 0
                    sazo_efet: 0
                    total_sazo: 0
                    es_minimo: 0
                    cmmf_quant: 0
                    cmmf_validade: string
                    ultima_venda: string
                    data_hora: string
      tags:
        - Produtos (skuconfigs)
    put:
      summary: Atualizando uma configuração do sku X empresa  (SKUConfigs)
      operationId: put-skuconfigs-id
      responses:
        '200':
          description: OK
      description: Atualiza um skuconfig já existente
      tags:
        - Produtos (skuconfigs)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Configs'
    delete:
      summary: Excluindo uma configuração do sku X empresa  (SKUConfigs)
      operationId: delete-skusconfigs-id
      responses:
        '200':
          description: OK
      description: '"Exclui" um skuconfig já existente. O sistema não deleta o registro, apenas coloca nulo nos campos de configuração do sku x empresa, ou seja, os campos: sazo_efet, quant_expo, total_sazo, es_minimo, quant_camp, cmmf_quant, cmmf_validade são setados para nulo, e o campo interno config_compra é armazenado a data e o usuário que efetuou o ajuste.'
      tags:
        - Produtos (skuconfigs)
    parameters:
      - schema:
          type: integer
          default: 100
          example: 100
        name: id
        in: path
        description: ID que representa a configuração do sku x empresa
        required: true
  '/skus/{id}':
    get:
      summary: Consultando um produto (SKU)
      tags:
        - Produtos (skus)
      operationId: get-skus-id
      parameters: []
      description: Mostra um produto já existente
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    message: Nenhum registro encontrado
                properties:
                  message:
                    type: string
                    minLength: 1
                    description: Mensagem de Erro
                required:
                  - message
    put:
      summary: Atualizando um produto (SKU)
      operationId: put-skus-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skus)
      description: Atualiza um produto já existente
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                '':
                  $ref: '#/components/schemas/SKU'
    delete:
      summary: Excluindo um produto (SKU)
      operationId: delete-skus-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skus)
      description: Exclui um produto já existente
    parameters:
      - schema:
          type: integer
          default: 5
        name: id
        in: path
        description: Código do produto (SKU)
        required: true
  '/skuarticles/{id}':
    get:
      summary: Consultando uma mercadoria
      tags:
        - Produtos (skuarticles)
      operationId: get-skuarticles-id
      parameters: []
      description: Mostra uma mercadoria já existente
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Embalagens'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    message: Nenhum registro encontrado
                properties:
                  message:
                    type: string
                    minLength: 1
                    description: Mensagem de Erro
                required:
                  - message
    put:
      summary: Atualizando uma mercadoria
      operationId: put-skuarticles-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skuarticles)
      description: Atualiza uma mercadoria já existente
    delete:
      summary: Excluindo uma mercadoria
      operationId: delete-skuarticles-id
      responses:
        '200':
          description: OK
      tags:
        - Produtos (skuarticles)
      description: Exclui uma mercadoria já existente
    parameters:
      - schema:
          type: integer
          default: 10888
        name: id
        in: path
        description: Código da mercadoria
        required: true
  /skuarticles:
    get:
      summary: Listando mercadorias
      tags:
        - Produtos (skuarticles)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Embalagens'
      operationId: get-skuarticles
      description: |
        Lista de mercadorias (SKUs e suas embalagens)

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | codigo_sku | int64 | código da mercadoria (ver filtro por embalagens)| 
        | embalagens | bool | deverá informar true para visualizar também as embalagens | 
        | numero_pedido | int64 | produtos que estão nesse pedido| 
        | codigo_descricao | string | Descrição da mercadoria, ou Se for numero então Se > 9999999 filtra por codigo de barras, senão pelo codigo mercadoria | 
        | fornecedor | string |  nome do fornecedor| 
        | marca | string |  nome da marca| 
        | ids_categ | []int64 | array de IDs de categorias | 
        | nivel | int | nivel da categoria | 
        | categoria | string | nome da categoria | 
        | fora_venda | bool |  incluir produtos que estão fora de venda? (padrão: false) |
        | referencia | string |  referência do código da mercadoria do fornecedor |
        | ncm | string |  código ncm |
        | barcode | int64 | código de barras|
        | user_id | int64 | ID do usuário que criou a mercadoria|
        | data_preco | string |  Data/Hora da ultima alteração do preco promocional ou mercadoria |
        | id_empresa | int |  utilizado para filtrar o estoque do predio |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando uma mercadoria
      operationId: post-skuarticles
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Embalagens'
      description: Cria uma mercadoria (embalagem de um SKU)
      tags:
        - Produtos (skuarticles)
    parameters: []
  '/orders/{id}':
    put:
      tags:
        - Pedidos (orders)
      summary: Atualizando um pedido
      description: Atualiza um pedido
      operationId: put-orders-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
    get:
      tags:
        - Pedidos (orders)
      summary: Consultando um pedido
      description: Consulta um pedido
      operationId: get-orders-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Número do Pedido
  /distributions:
    get:
      summary: Listando distribuições
      tags:
        - Distribuição (distributions)
      operationId: get-distributions
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
            examples: {}
      description: Lista de distribuições para filiais
      parameters:
        - schema:
            type: string
          in: query
          name: filter
        - schema:
            type: array
          in: query
          name: range
        - schema:
            type: array
          in: query
          name: sort
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: 1684
                    tipo: NORMAL
                    datahora_geracao: '2021-08-10T07:29:49-03:00'
                    rnx_tenant_fk: 5563868
                    id_predio: 5
                    desc_predio: VOLUNTARIOS
                    user_id: 23315
                    nome_usuario: WAGNERF
                    conclusao: 1
                    params_usados:
                      pedido: 660942
                      dias_suprimento: 30
                      itens_por_pedido: 50
                      sempre_fracionar: true
                      indice_suprimento: 20
                      crescimento_padrao: 1
                      distrib_dias_faixa: 5
                      distrib_mos_maximo: 0.5
                      max_linhas_empresa: 15000
                      distrib_curva_minima: 7
                      faixa_maxima_sazonal: 2
                      distrib_reversa_empresas:
                        - 33
                    info_suprimento:
                      linhas: 14
                      pedidos: 10
                      emitidos: 10
                      transito: 0
                      cancelada: true
                      cont_disp: 6
                      cont_skus: 6
                      pendentes: 0
                      cancelados: 0
                      soma_sugest: 14
                      falta_entregar: 1
                      notas_entregues: 7
                    ativo: false
                    status: 2050
                    sigla_status: DISTRIB COM PEDIDOS
                    lista_params:
                      - key: crescimento_padrao
                        value: '1.00'
                      - key: dias_suprimento
                        value: '30'
                      - key: distrib_curva_minima
                        value: '7'
                      - key: distrib_dias_faixa
                        value: '5'
                      - key: distrib_mos_maximo
                        value: '0.50'
                      - key: distrib_reversa_empresas
                        value: '[33]'
                      - key: faixa_maxima_sazonal
                        value: '2'
                      - key: indice_suprimento
                        value: '20'
                      - key: itens_por_pedido
                        value: '50'
                      - key: max_linhas_empresa
                        value: '15000'
                      - key: pedido
                        value: '660942'
                      - key: sempre_fracionar
                        value: 'true'
                properties:
                  id:
                    type: number
                  tipo:
                    type: string
                    minLength: 1
                    description: 'Tipo da distribuição: NORMAL, REVFND (Reversa Falta no Destino), REVSNO (Reversa Sobra na Origem), etc'
                  datahora_geracao:
                    type: string
                    minLength: 1
                  id_predio:
                    type: number
                    description: Prédio de origem
                  desc_predio:
                    type: string
                    minLength: 1
                  user_id:
                    type: number
                  nome_usuario:
                    type: string
                    minLength: 1
                  conclusao:
                    type: number
                    description: Percentual de conclusão
                  params_usados:
                    type: object
                    required:
                      - pedido
                      - dias_suprimento
                      - itens_por_pedido
                      - sempre_fracionar
                      - indice_suprimento
                      - crescimento_padrao
                      - distrib_dias_faixa
                      - distrib_mos_maximo
                      - max_linhas_empresa
                      - distrib_curva_minima
                      - faixa_maxima_sazonal
                      - distrib_reversa_empresas
                    properties:
                      pedido:
                        type: number
                      dias_suprimento:
                        type: number
                      itens_por_pedido:
                        type: number
                      sempre_fracionar:
                        type: boolean
                      indice_suprimento:
                        type: number
                      crescimento_padrao:
                        type: number
                      distrib_dias_faixa:
                        type: number
                      distrib_mos_maximo:
                        type: number
                      max_linhas_empresa:
                        type: number
                      distrib_curva_minima:
                        type: number
                      faixa_maxima_sazonal:
                        type: number
                      distrib_reversa_empresas:
                        type: array
                        items:
                          type: object
                  info_suprimento:
                    type: object
                    required:
                      - linhas
                      - pedidos
                      - emitidos
                      - transito
                      - cancelada
                      - cont_disp
                      - cont_skus
                      - pendentes
                      - cancelados
                      - soma_sugest
                      - falta_entregar
                      - notas_entregues
                    properties:
                      linhas:
                        type: number
                      pedidos:
                        type: number
                      emitidos:
                        type: number
                      transito:
                        type: number
                      cancelada:
                        type: boolean
                      cont_disp:
                        type: number
                      cont_skus:
                        type: number
                      pendentes:
                        type: number
                      cancelados:
                        type: number
                      soma_sugest:
                        type: number
                      falta_entregar:
                        type: number
                      notas_entregues:
                        type: number
                  ativo:
                    type: boolean
                  status:
                    type: number
                  sigla_status:
                    type: string
                    minLength: 1
                  lista_params:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          minLength: 1
                        value:
                          type: string
                          minLength: 1
                      required:
                        - key
                        - value
                required:
                  - id
                  - tipo
                  - datahora_geracao
                  - id_predio
                  - desc_predio
                  - user_id
                  - nome_usuario
                  - conclusao
                  - params_usados
                  - info_suprimento
                  - ativo
                  - status
                  - sigla_status
                  - lista_params
    post:
      summary: Criando uma nova distribuição
      operationId: post-distributions
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                ids_empresas:
                  type: array
                  description: Lista de empresas destino
                  items: {}
                numero_pedido:
                  type: integer
                  description: Nº do pedido que contém os itens que serão enviados
                tipo_distrib:
                  type: string
                  enum:
                    - NORMAL
                    - ABLOJA
                    - REVFND
                    - REVSNO
                  description: 'Tipo de distribuição (padrão: NORMAL)'
                gerar_pedidos:
                  type: boolean
                  description: 'Se TRUE, gera os pedidos após criar a distribuição'
                predio:
                  type: integer
                  description: 'Prédio de origem (padrão: CD)'
                codigo_sku:
                  type: integer
                  description: Código de um SKU para testes
                curva_minima_geral:
                  type: integer
                  description: Somente produtos desta curva para cima serão enviados
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
      parameters: []
      tags:
        - Distribuição (distributions)
      description: Cria uma nova distribuição
      responses:
        '200':
          description: OK
    parameters: []
  /skugrids:
    get:
      summary: Listando Grades de SKU
      tags:
        - Produtos (skugrids)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
      operationId: get-skugrids
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      description: 'Lista de grades de SKU (cores, tamanhos, etc)'
    post:
      summary: Criando uma grade
      operationId: post-skugrids
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
      parameters: []
      tags:
        - Produtos (skugrids)
      description: 'Cria uma grade de SKU (cor, tamanho, etc)'
  /skustocks:
    get:
      summary: Listando endereços de estoque
      tags:
        - Estoque (skustocks)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estoque-GET'
      operationId: get-skustocks
      description: |
        Lista de endereços de estoque (SKU x Prédio x Setor)

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | cod_sku | int64 | código do Produto (SKU)| 
        | id_predio | int64 | ID do prédio | 
        | id_empresa | int64 |  Filtro por empresa. O id_predio tem prioridade sobre o id_empresa | 
        | setor_letra | string | Filtra os estoques de um setor |
        | numero_pedido | int64 |  Filtra o estoque dos itens do pedido| 
        | id_categoria | int64 | Filtra o estoque dos itens da categoria a ser filtrada | 
        | data_inicial | string | Data Inicial alteração de estoque | 
        | data_final | string | Data da última alteração de estoque| 
        | manutencao | string | Filtrar os "encalhados" ou "negativos" | 
        | id_recepcao | int64 | ID da recepção |
        | fornecedor | string | Nome do Fornecedor |
        | todos | bool | Por padrão traz somente os estoques diferentes de zero. Para trazer também os zerados deve-se colocar "todos" |
        | somente_zerados | bool | Somente com estoques zerados ou menores que zero |
        | arroba_zerado | bool | Somente os estoques com o setor A zerado |
        | tipo_virtual | int | Quando 35 = DISTRIB (Distribuição em trânsito), 36 = RMA (Retorno de Mercadoria), 37 = Descarte (Danificado aguardando descarte), 38 = PERDA, e quando 99 = todos |
        | pendente_erp | bool | Usado na integração |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando um endereço
      operationId: post-skustocks
      responses:
        '200':
          description: OK
      description: Cria um novo endereço de estoque
      tags:
        - Estoque (skustocks)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estoque-GET'
  /buildings:
    get:
      summary: Listando prédios de estoque
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predio-Estoque'
              examples:
                example-1:
                  value:
                    id: 0
                    desc_predio: string
                    address_id: 0
                    logradouro: string
                    numero: 0
                    nome_municipio: string
                    uf: string
                    empresas:
                      - id: 0
                        sigla_loja: string
                    config_predio: {}
      operationId: get-buildings
      description: |
        Lista de prédios de estoque 

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | código do Prédio| 
        | todos | boolean | Padrão False, trazendo somente os prédios com endereço | 
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Prédios de Estoque
    post:
      summary: Criando um endereço
      operationId: post-buildings
      responses:
        '200':
          description: OK
      description: Cria um novo prédio de estoque
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Predio-Estoque'
      tags:
        - Prédios de Estoque
    parameters: []
  /brands:
    get:
      summary: Listando as marcas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marca-GET'
              examples:
                example-1:
                  value:
                    id: 5766
                    nome_marca: REGISPEL
                    marca_ativa: true
                    produtos: 16
      operationId: get-brands
      description: |-
        Lista de marcas de produto 

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id | int64 | id da Marca| 
        | ids | []int64 | Possibilidade de filtrar mais de uma marca |
        | nome_marca | string | Nome da marca |
        | inativas | bool | Trazer somente as marcas inativas |
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Marcas
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    post:
      summary: Criando uma marca
      operationId: post-brands
      responses:
        '200':
          description: OK
      description: Cria uma nova marca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marca-PUT'
      tags:
        - Marcas
    parameters: []
  '/skustocks/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consultando um estoque
      tags:
        - Estoque (skustocks)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estoque-GET'
      operationId: get-skustocks-id
      description: Consulta um endereço de estoque
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    put:
      summary: Atualizando um endereço
      operationId: put-skustocks-id
      responses:
        '200':
          description: OK
      description: Atualiza um endereço de estoque
      tags:
        - Estoque (skustocks)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estoque-PUT'
        description: ''
    delete:
      summary: Excluindo um endereço
      operationId: delete-skustocks-id
      responses:
        '200':
          description: OK
      description: Exclui um endereço de estoque. Ele precisa estar vazio (quantidade zerada) para poder ser excluído.
      tags:
        - Estoque (skustocks)
  '/buildings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consultando um prédio de estoque
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predio-Estoque'
      operationId: get-buildings-id
      description: Consulta um prédio de estoque
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Prédios de Estoque
    put:
      summary: Atualizando um prédio de estoque
      operationId: put-buildings-id
      responses:
        '200':
          description: OK
      description: Atualiza um prédio de estoque
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Predio-Estoque'
        description: ''
      tags:
        - Prédios de Estoque
    delete:
      summary: Excluindo um prédio de estoque
      operationId: delete-buildings-id
      responses:
        '200':
          description: OK
      description: Exclui um prédio de estoque.
      tags:
        - Prédios de Estoque
  '/brands/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consultando uma marca de produto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marca-GET'
      operationId: get-brands-id
      description: Consulta uma marca de produto
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
      tags:
        - Marcas
    put:
      summary: Atualizando um prédio de estoque
      operationId: put-brands-id
      responses:
        '200':
          description: OK
      description: Atualiza uma marca de produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marca-PUT'
        description: ''
      tags:
        - Prédios de Estoque
    delete:
      summary: Excluindo uma marca de produto
      operationId: delete-brands-id
      responses:
        '200':
          description: OK
      description: Exclui uma marca de produto.
      tags:
        - Marcas
  '/pricelists/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consultando uma Lista de Preços (PLU)
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLU'
      operationId: get-pricelists-id
      parameters: []
      description: Consulta uma lista de preços
    put:
      summary: Atualizando uma Lista de Preços (PLU)
      operationId: put-pricelists-id
      responses:
        '200':
          description: OK
      description: Atualiza dados de uma lista de preços
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLU'
      tags:
        - Listas de Preços (pricelists)
    delete:
      summary: Excluindo uma Lista de Preços (PLU)
      operationId: delete-pricelists-id
      responses:
        '200':
          description: OK
      tags:
        - Listas de Preços (pricelists)
      description: Exclui uma lista de preços
  /pricelists:
    get:
      summary: Listando as Listas de Preços (PLU)
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PLU'
      operationId: get-pricelists
      description: Lista os PLUs
    post:
      summary: Criando uma nova Lista de Preços (PLU)
      operationId: post-pricelists
      responses:
        '200':
          description: OK
      description: Cria uma nova Lista de Preços (PLU)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLU'
      tags:
        - Listas de Preços (pricelists)
  '/pricelistarticles/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 'ITEM: Consultar produto x PLU'
      tags:
        - Listas de Preços (pricelists)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLU-item'
      operationId: get-pricelistarticles-id
      description: Consulta um preço de um PLU
    post:
      summary: 'ITEM: Inserir produto x PLU'
      operationId: post-pricelistarticles-id
      responses:
        '200':
          description: OK
      description: Insere um registro na lista de preços
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PLU-item'
        description: ''
      tags:
        - Listas de Preços (pricelists)
  '/customers/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consulta uma pessoa
      tags:
        - Pessoas (customers)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa'
      operationId: get-customers-id
      description: 'Consulta uma pessoa física ou jurídica (cliente, fornecedor, colaborador, etc)'
    put:
      summary: Atualiza uma pessoa
      operationId: put-customers-id
      responses:
        '200':
          description: OK
      description: Atualiza uma pessoa física ou jurídica
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pessoa'
      tags:
        - Pessoas (customers)
    delete:
      summary: Inativa uma pessoa
      operationId: delete-customers-id
      responses:
        '200':
          description: OK
      description: Inativa uma pessoa física ou jurídica
      tags:
        - Pessoas (customers)
  '/companies/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consulta uma empresa
      tags:
        - Empresas (companies)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empresa'
      operationId: get-companies-id
      description: Consulta uma empresa
    put:
      summary: Atualiza uma empresa
      operationId: put-companies-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empresa'
        description: ''
      description: Atualiza uma empresa
      tags:
        - Empresas (companies)
  '/addresses/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consultando um endereço
      tags:
        - Endereços de pessoas (addresses)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endereco'
      operationId: get-addresses-id
      description: Consulta um endereço de uma pessoa
    put:
      summary: Atualizando um endereço
      operationId: put-addresses-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
      description: Atualiza um endereço
      tags:
        - Endereços de pessoas (addresses)
    delete:
      summary: Excluindo um endereço
      operationId: delete-addresses-id
      responses:
        '200':
          description: OK
      description: Exclui um endereço
      tags:
        - Endereços de pessoas (addresses)
  /addresses:
    get:
      summary: Listando endereços de uma pessoa
      tags:
        - Endereços de pessoas (addresses)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
      operationId: get-addresses
      description: |
        Listagem de endereços

        ### Filtros disponíveis

         Campo | Tipo | Descrição |
        | ------ | ------ | ------ |
        | id_pessoa | int64 | código da pessoa | 
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando um endereço
      operationId: post-addresses
      responses:
        '200':
          description: OK
      tags:
        - Endereços de pessoas (addresses)
      description: Cria um endereço de uma pessoa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
        description: ''
  '/purchasemappings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consultando um mapeamento
      tags:
        - Mapeamentos (purchasemappings)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SKU-Mapeamento'
      operationId: get-purchasemappings-id
      description: Consulta um Mapeamento Produto x Fornecedor
    put:
      summary: Atualizando um mapeamento
      operationId: put-purchasemappings-id
      responses:
        '200':
          description: OK
      tags:
        - Mapeamentos (purchasemappings)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Mapeamento'
      description: Atualiza um mapeamento produto x fornecedor
  '/taxclasses/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - Tributária (Classe Fiscal)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classe-Fiscal'
      operationId: get-taxclasses-id
      description: Consulta uma classe fiscal
    put:
      summary: Atualizando uma classe fiscal
      operationId: put-taxclasses-id
      responses:
        '200':
          description: OK
      tags:
        - Tributária (Classe Fiscal)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classe-Fiscal'
      description: Atualiza uma classe fiscal
    delete:
      summary: Excluindo uma classe fiscal
      operationId: delete-taxclasses-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
            application/xml:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classe-Fiscal'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      description: Exclui uma classe fiscal
      tags:
        - Tributária (Classe Fiscal)
  /purchasemappings:
    get:
      summary: Listando mapeamentos
      tags:
        - Mapeamentos (purchasemappings)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SKU-Mapeamento'
      operationId: get-purchasemappings
      description: Listagem de mapeamentos de um produto (ou fornecedor)
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando um mapeamento
      operationId: post-purchasemappings
      responses:
        '200':
          description: OK
      tags:
        - Mapeamentos (purchasemappings)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SKU-Mapeamento'
      description: Cria um novo mapeamento produto x fornecedor
  /taxclasses:
    get:
      summary: Listando as classes fiscais
      tags:
        - Tributária (Classe Fiscal)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Classe-Fiscal'
      operationId: get-taxclasses
      description: |
        Listagem das classes fiscais

        Ver regra das prioridades do CFOP em: https://rednaxel.freshdesk.com/support/solutions/articles/47001200096-regras-do-cfop/preview
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Criando um mapeamento
      operationId: post-taxclasses
      responses:
        '200':
          description: OK
      tags:
        - Tributária (Classe Fiscal)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classe-Fiscal'
      description: Cria uma nova classe fiscal
    parameters: []
  /invoices:
    post:
      summary: Criando Nota/Cupom Fiscal
      operationId: post-invoices
      responses:
        '200':
          description: OK
      tags:
        - Notas/Cupons Fiscais (invoices)
      parameters: []
      description: 'Envia o XML de uma NFe/NFCe '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                xml:
                  type: string
                  description: XML codificado em Base64
                  writeOnly: true
              required:
                - xml
  /orderitems:
    get:
      summary: Lista de itens de um pedido
      tags:
        - Pedidos (orders)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pedido-Item'
      operationId: get-orderitems
      description: Filtro "numero_pedido" é obrigatório.
      parameters:
        - in: query
          name: filter
          description: Filtros
          required: true
          schema:
            default: '{"numero_pedido":999999}'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Insere um item em um pedido
      operationId: post-orderitems
      responses:
        '200':
          description: OK
      description: 'Insere um item em um pedido. Se o `vuncom` (valor unitário) não for informado, usa o preço de tabela.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido-Item'
      tags:
        - Pedidos (orders)
  '/orderitems/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Consulta um item de um pedido
      tags:
        - Pedidos (orders)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido-Item'
      operationId: get-orderitems-id
      description: Consulta (para edição) um item de um pedido
    put:
      summary: Atualiza um item de um pedido
      operationId: put-orderitems-id
      responses:
        '200':
          description: OK
      description: Modifica um item de um pedido
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido-Item'
      tags:
        - Pedidos (orders)
    delete:
      summary: Remove um item de um pedido
      operationId: delete-orderitems-id
      responses:
        '200':
          description: OK
      description: Remove um item de um pedido
      tags:
        - Pedidos (orders)
  /customers:
    get:
      summary: Listando pessoas
      tags:
        - Pessoas (customers)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pessoa'
      operationId: get-customers
      description: 'Lista '
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Cria uma pessoa
      operationId: post-customers
      responses:
        '200':
          description: OK
      description: Cadastra uma nova pessoa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pessoa'
      tags:
        - Pessoas (customers)
  /catalogs:
    get:
      summary: Listagem de catálogos
      tags:
        - Categorias (categories)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogo'
      operationId: get-catalogs
      description: Lista de catálogos
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
  /categories:
    get:
      summary: Listagem de Categorias
      tags:
        - Categorias (categories)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
      operationId: get-categories
      description: Listagem de categorias de produtos. Filtre por "id_catalogo" para listar as categorias de um catálogo.
      parameters:
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Sort'
    post:
      summary: Cria uma nova categoria
      operationId: post-categories
      responses:
        '200':
          description: OK
      description: Cria uma nova categoria de produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categoria'
      tags:
        - Categorias (categories)
components:
  securitySchemes:
    Usuário/Senha:
      type: http
      scheme: basic
      description: 'Usuário, Conta(tenant) e senha, ex: admin@zezinho:zeus'
    Token de acesso:
      type: http
      scheme: bearer
  requestBodies: {}
  schemas:
    Grade:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 209711
          id_marca: 1464
          id_categ: 4563
          caminho: PASTA > PASTAS SANFONADAS > PASTA SANFONADA DUPLICATA > PASTA SANFONADA DUPLICATA 31 DIVI PERCALUX
          ativo: false
          marca: '-'
          orig: 0
          id_classe: 3
          trib: ICMS
          cst: 60
          aliq_ipi: 10
          ncm: '00000000'
          cest: ''
          codigo_alfa: G31013
          desc_basica: PASTA SANFONADA TRANSP DUPLIC 31DIV FUME COD31013
      properties:
        id:
          type: number
        id_marca:
          type: number
        id_categ:
          type: number
        caminho:
          type: string
          minLength: 1
        ativo:
          type: boolean
        marca:
          type: string
          minLength: 1
        orig:
          type: number
        id_classe:
          type: number
        trib:
          type: string
          minLength: 1
        cst:
          type: number
        aliq_ipi:
          type: number
        ncm:
          type: string
          minLength: 1
        cest:
          type: string
        codigo_alfa:
          type: string
          minLength: 1
        desc_basica:
          type: string
          minLength: 1
      required:
        - ativo
        - orig
        - cst
        - ncm
        - cest
    SKU:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 31013
          ucom: UN
          prod_xprod: PASTA SANFONADA TRANSP DUPLIC 31DIV FUME COD31013
          preco_venda: 18.7
          grade:
            id: 209711
            id_marca: 1464
            id_categ: 4563
            caminho: PASTA > PASTAS SANFONADAS > PASTA SANFONADA DUPLICATA > PASTA SANFONADA DUPLICATA 31 DIVI PERCALUX
            ativo: false
            marca: '-'
            orig: 0
            id_classe: 3
            trib: ICMS
            cst: 60
            aliq_ipi: 10
            ncm: '00000000'
            cest: ''
            codigo_alfa: G31013
            desc_basica: PASTA SANFONADA TRANSP DUPLIC 31DIV FUME COD31013
          ativo: false
          dthr_sku: '2021-08-25T10:39:28-03:00'
          custos:
            custo_liquido: 9.35
            curva: 0
            vbcst_nota: 0
            icms_efetivo: 0
            reducao_bcst: 0
            vicmsst_ret: 0
            vicms_substituto: 0
            vunit_compra: 7.6
            pst_compra: 0
            custo_merc_vend: 8.36
          fornecedores:
            - id_fornec: 53721
              nome_fornec: FORNECEDOR PASTA SANFONADA
              id_pessoa: 35510001
          fotos:
            - id: 3101300
              url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/31013.JPG'
              primario: ''
              secundario: ''
          flags_sku:
            falta_fornecedor: true
            fora_de_linha: false
            status_legado: 1
          desc_comercial: PASTA SANFONADA TRANSP DUPLIC 31DIV FUME COD31013
          categorias:
            - nome_catalogo: Ecommerce
              id_categoria: 3
              desc_categoria: Escritório
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 5
              desc_categoria: Pasta
              principal: true
            - nome_catalogo: Ecommerce
              id_categoria: 11
              desc_categoria: Escolar
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 995
              desc_categoria: Pasta Sanfonada
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 998
              desc_categoria: Pasta Sanfonada Duplicata
              principal: false
            - nome_catalogo: Tags
              id_categoria: 10004
              desc_categoria: Escolar
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 20842
              desc_categoria: Organização e Planejamento
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 20857
              desc_categoria: Pasta Sanfonada
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 20860
              desc_categoria: Pasta Sanfonada Duplicata
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 20878
              desc_categoria: Pasta
              principal: false
            - nome_catalogo: Ecommerce
              id_categoria: 20882
              desc_categoria: Pasta Sanfonada
              principal: false
          codigo_agrup: '*'
      properties:
        id:
          type: number
        ucom:
          type: string
          minLength: 1
        prod_xprod:
          type: string
          minLength: 1
          description: Descrição do SKU (tag <xProd> da NFe)
        ativo:
          type: boolean
        dthr_sku:
          type: string
          minLength: 1
        custos:
          type: object
          properties:
            custo_liquido:
              type: number
            curva:
              type: number
            vbcst_nota:
              type: number
            icms_efetivo:
              type: number
            reducao_bcst:
              type: number
            vicmsst_ret:
              type: number
            vicms_substituto:
              type: number
            vunit_compra:
              type: number
            pst_compra:
              type: number
            custo_merc_vend:
              type: number
            cmp_principal:
              type: number
        fornecedores:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              id_fornec:
                type: number
              nome_fornec:
                type: string
                minLength: 1
              id_pessoa:
                type: number
            required:
              - id_fornec
        fotos:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              id:
                type: number
              url_foto:
                type: string
                minLength: 1
              primario:
                type: string
              secundario:
                type: string
        flags_sku:
          type: object
          properties:
            falta_fornecedor:
              type: boolean
            fora_de_linha:
              type: boolean
            status_legado:
              type: number
            nao_comprar:
              type: boolean
            em_liquidacao:
              type: boolean
            sob_encomenda:
              type: boolean
            producao:
              type: boolean
            somente_brinde:
              type: boolean
            ativo_permanente:
              type: boolean
            nao_distribuir:
              type: boolean
            selo_inmetro:
              type: boolean
            requer_numero_serie:
              type: boolean
        categorias:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              nome_catalogo:
                type: string
              id_categoria:
                type: number
              desc_categoria:
                type: string
              principal:
                type: boolean
            required:
              - id_categoria
        codigo_agrup:
          type: string
          minLength: 1
        grade:
          $ref: '#/components/schemas/Grade'
        desc_comercial:
          type: string
          minLength: 1
        desc_curta:
          type: string
        desc_longa:
          type: string
        legado:
          type: boolean
        embalagens:
          type: array
          items:
            $ref: '#/components/schemas/Embalagens'
      required:
        - id
        - ucom
        - prod_xprod
    Embalagens:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 10887
          data_cadastro: '2002-05-31T00:00:00'
          ucom: PCT
          prod_xprod: 'PAPEL CHAMEX A4 21CMX29,7CM 75G 500 FL BRANCO'
          codigo_sku: 10887
          preco_tabela: 23.98
          barcodes:
            - gtin: 7891173023001
            - gtin: 7891173024930
            - gtin: 7891173024848
          ativo: true
          url_foto: 'https://storage.googleapis.com/rednaxel-fotos/cdp/produto/10887.JPG'
          preco_promo: 23.98
          preco_venda: 23.98
          estoque_predio: 590
          desc_web:
            longa: |-
              - Cor do Papel: Branco
              - Gramatura: 75 g/m2 
              - Formato: A4 (210mm x 297mm)
              - Quantidade por pacote: 500 folhas

              O melhor para uso PROFISSIONAL, o Chamex Office oferece a melhor solução para suas impressões, com garantia de qualidade profissional. Superfície resistente, corte perfeito e absorção equilibrada que permite o melhor deslizamento na impressora evitando desperdício de tinta.
              O sulfite Chamex é produzido a partir de florestas 100% plantadas e renováveis e suas fibras são tratadas para obter o mais alto grau de brancura. Garante 99,99% não atolamento em impressoras.
            nome: 'Papel Chamex A4 21cm x 29,7cm 75g 500 Folhas Branco'
            curta: 'Pacote com 500 folhas de papel sulfite 75g branco, tamanho A4. A melhor solução para suas impressões, com garantia de qualidade profissional Chamex.'
          peso_kg: 2.34
          largura_m: 0.297
          altura_m: 0.21
          profundidade_m: 0.048
          id_package: 1
          nome_embalagem: Sedex GG
          capac_package: 2
          embalagem_venda: true
          margem_padrao: 37.62
          pendente_erp: {}
          promo_inicio: '2021-08-20T00:00:00'
          promo_termino: '2021-09-20T00:00:00'
        example-2:
          value:
            id: 0
            data_cadastro: string
            ucom: string
            prod_xprod: string
            codigo_sku: 0
            preco_tabela: 0
            barcodes:
              - gtin: 0
                flags:
                  deletar: true
                invalido: true
            ativo: true
            url_foto: string
            preco_promo: 0
            preco_venda: 0
            estoque_predio: 0
            desc_web:
              longa: string
              nome: string
              curta: string
            peso_kg: 0
            largura_m: 0
            altura_m: 0
            profundidade_m: 0
            id_package: 0
            nome_embalagem: string
            capac_package: 0
            embalagem_venda: true
            margem_padrao: 0
            pendente_erp:
              preco: true
              cadastro: true
            promo_inicio: string
            promo_termino: string
      properties:
        id:
          type: number
        data_cadastro:
          type: string
          minLength: 1
        ucom:
          type: string
          minLength: 1
        prod_xprod:
          type: string
          minLength: 1
        codigo_sku:
          type: number
        preco_tabela:
          type: number
        barcodes:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              gtin:
                type: number
              flags:
                type: object
                properties:
                  deletar:
                    type: boolean
              invalido:
                type: boolean
                description: Indica que o código de barras pode estar inválido
            required:
              - gtin
        ativo:
          type: boolean
        url_foto:
          type: string
          minLength: 1
        preco_promo:
          type: number
        preco_venda:
          type: number
        estoque_predio:
          type: number
        desc_web:
          type: object
          properties:
            longa:
              type: string
              minLength: 1
            nome:
              type: string
              minLength: 1
            curta:
              type: string
              minLength: 1
        peso_kg:
          type: number
        largura_m:
          type: number
        altura_m:
          type: number
        profundidade_m:
          type: number
        id_package:
          type: number
        nome_embalagem:
          type: string
          minLength: 1
        capac_package:
          type: number
        embalagem_venda:
          type: boolean
        margem_padrao:
          type: number
        pendente_erp:
          type: object
          properties:
            preco:
              type: boolean
            cadastro:
              type: boolean
        promo_inicio:
          type: string
          minLength: 1
        promo_termino:
          type: string
          minLength: 1
        embalagem_fragil:
          type: boolean
      required:
        - id
        - barcodes
    Estoque-GET:
      description: Endereço de Estoque
      type: object
      x-examples:
        example-1:
          id_estoque: 9900220202040204
          id: '9900220202040205'
          setor: 2
          corredor: 2
          cod_sku: 118685
          id_predio: 22
          desc_predio: CANOAS
          letras: BBD-0205
          quantidade: 57
          capacidade: 120
          prod_xprod: LAPIS COR 12 CORES PASTEL SEXTAVADO LYKE LIKITO
      properties:
        id:
          type: string
        id_estoque:
          type: number
        letras:
          type: string
          description: ID do endereço em formato alfanumérico
        cod_sku:
          type: number
        prod_xprod:
          type: string
          description: Descrição do produto
        setor:
          type: number
        corredor:
          type: number
        id_predio:
          type: number
        desc_predio:
          type: string
        quantidade:
          type: number
        capacidade:
          type: number
      required:
        - id
        - id_estoque
        - letras
        - cod_sku
        - prod_xprod
        - setor
        - id_predio
        - desc_predio
        - quantidade
    Estoque-PUT:
      description: Endereço de Estoque
      type: object
      x-examples:
        example-1:
          id_estoque: 9900220202040204
          id: '9900220202040205'
          setor: 2
          corredor: 2
          cod_sku: 118685
          id_predio: 22
          desc_predio: CANOAS
          letras: BBD-0205
          quantidade: 57
          capacidade: 120
          prod_xprod: LAPIS COR 12 CORES PASTEL SEXTAVADO LYKE LIKITO
      title: ''
      properties:
        id:
          type: string
        id_estoque:
          type: number
        letras:
          type: string
          description: ID do endereço em formato alfanumérico
        cod_sku:
          type: number
        prod_xprod:
          type: string
          description: Descrição do produto
        setor:
          type: number
        corredor:
          type: number
        id_predio:
          type: number
        desc_predio:
          type: string
        quantidade:
          type: number
        capacidade:
          type: number
        zerar:
          type: boolean
          description: Passar "true" para zerar a quantidade
        capac_zero:
          type: boolean
          description: Passar "true" para zerar a capacidade
        delta:
          type: number
          description: Alteração na quantidade (para mais ou para menos)
        inventario:
          type: number
          description: Contagem de estoque (substitui a quantidade atual)
        destino:
          type: integer
          description: ID do endereço destino (transferência interna no prédio)
        tipo_virtual:
          type: integer
          description: Tipo de estoque virtual (de 35 a 38)
        motivo_virt:
          type: integer
          description: 'Motivo da perda, quebra, ajuste, etc (4000-4999)'
        tipo_manut:
          type: string
          description: 'Tipo de manutenção (encalhados, negativos, etc)'
        data_checagem:
          type: string
          description: Data de checagem (encalhados)
        separar:
          type: integer
          description: Número do pedido a separar (WMS)
        pedido_baixa:
          type: integer
          description: 'Pedido de baixa (ex: depósito fechado)'
        pedido_supri:
          type: integer
          description: 'Pedido de suprimento (ex: depósito fechado)'
        bloqueado_por:
          type: string
          description: Usuário que está bloqueando no WMS
      required:
        - id
        - id_estoque
        - letras
        - cod_sku
        - prod_xprod
        - setor
        - id_predio
        - desc_predio
        - quantidade
    PLU:
      description: Lista de Preços (Price LookUp)
      type: object
      x-examples:
        example-1:
          id: 212
          precedencia: 150
          nome_lista: Preço Amazon
          percentual_desconto: 0
          canais:
            - id_canal: 114
              desc_canal: Amazon Supriagora
      properties:
        id:
          type: number
        precedencia:
          type: number
          description: Ordem de precedência em caso de empate
        nome_lista:
          type: string
        percentual_desconto:
          type: number
        canais:
          type: array
          uniqueItems: true
          minItems: 1
          description: Lista de canais atendidos
          items:
            type: object
            properties:
              id_canal:
                type: number
                description: ''
              desc_canal:
                type: string
            required:
              - id_canal
              - desc_canal
      required:
        - id
        - precedencia
        - nome_lista
        - canais
    PLU-item:
      description: Item de um PLU (cruzamento Produto x PLU)
      type: object
      x-examples:
        example-1:
          id: 631220
          id_plu: 201
          cod_produto: 126924
          ucom: CX
          prod_xprod: CAFE MELITTA CAPSULA COMPATIVEL 50G 10UN AUDACCE
          preco_tabela: 21.25
          margem_cliente: 15
          preco_cliente: 21.25
          sku_ativo: true
      properties:
        id:
          type: number
        id_plu:
          type: number
          description: ID do PLU
        cod_produto:
          type: number
        ucom:
          type: string
        prod_xprod:
          type: string
        preco_tabela:
          type: number
          description: Preço de tabela
        preco_cliente:
          type: number
          description: Preço do produto nesse PLU
        margem_cliente:
          type: number
        sku_ativo:
          type: boolean
      required:
        - id
        - id_plu
        - cod_produto
    Pessoa:
      description: Pessoa física ou jurídica
      type: object
      x-examples:
        example-1:
          id: 31266002
          cpf_cnpj: 69229154000156
          nome_razao: TESTE
          nome_fantasia: FANTASIA
          telefone: '5130217888'
          type_id: 6
          email: teste@casadopapel.com
          fav_danfe: true
          ind_iedest: 9
          ender_sede: 'AV. OTTO NIEMEYER, 1234 - TRISTEZA/CAVALHADA - Porto Alegre/RS'
          pjuridica: true
          emails:
            - email: maisteste@cdp.com
              pessoal: false
              danfe: false
              favorito: false
          telefones:
            - id: 2552347
              phone_id: 2552347
              type_id: 3
              tipo: CELULAR
              numero: (51) 9999-9999
          categorias:
            - id: 3
              nome: ESCRITORIO
          config_formas:
            - desc_forma: Cartão de Crédito
              nome_usuario: ALEXSANDER
              limite_forma: 2000
              cod_tpag: 3
              semaforo_forma: 0
            - desc_forma: Cheque
              nome_usuario: ALEXSANDER
              limite_forma: 1000
              cod_tpag: 2
              semaforo_forma: 0
          outras_info:
            semaforo_credito: 1
            limite_credito: 500
            tpag_preferido: 15
            mensagem_inconsistente: ''
            dias_ciclagem: 30
            isento_acrescimo: false
            credito_loja: false
          canal: TLV
          id_canal: 71
          id_vendedor: 9778001
          ativo: true
          observ_padrao: Texto longo das observações
          observ_financeira: Texto das observações financeiras
          perfis:
            - perfil: cliente
          data_cadastro: '2006-01-19T00:00:00'
      properties:
        id:
          type: number
        nome_razao:
          type: string
          description: Nome ou Razão Social
        nome_fantasia:
          type: string
          description: Nome fantasia
        cpf_cnpj:
          type: number
          description: CPF ou CNPJ (ver campo "pjuridica")
        pjuridica:
          type: boolean
          description: 'Pessoa jurídica? TRUE = Pessoa Jurídica, FALSE = Pessoa Física'
        ind_iedest:
          type: integer
          enum:
            - 1
            - 2
            - 9
          description: Indicador da IE do Destinatário (Manual NFe)
        telefone:
          type: string
          description: Telefone principal
        type_id:
          type: number
          description: Tipo do telefone principal
        email:
          type: string
          description: Email favorito
        fav_danfe:
          type: boolean
          description: Email favorito recebe DANFE?
        ender_sede:
          type: string
          description: Endereço-sede (somente leitura)
          readOnly: true
        emails:
          type: array
          uniqueItems: true
          description: Lista de emails (somente um pode ser favorito)
          items:
            type: object
            properties:
              email:
                type: string
              favorito:
                type: boolean
              pessoal:
                type: boolean
              danfe:
                type: boolean
            required:
              - email
        telefones:
          type: array
          uniqueItems: true
          description: Lista de telefones (somente um pode ser principal)
          items:
            type: object
            properties:
              id:
                type: number
              type_id:
                type: number
              tipo:
                type: string
              numero:
                type: string
            required:
              - id
              - type_id
              - tipo
              - numero
        categorias:
          type: array
          uniqueItems: true
          description: Lista de categorias
          items:
            type: object
            properties:
              id:
                type: number
              nome:
                type: string
            required:
              - id
        config_formas:
          type: array
          uniqueItems: true
          description: Configuração de crédito por forma de pagamento
          items:
            type: object
            properties:
              cod_tpag:
                type: number
                description: Código da Forma de Pagamento (tPag)
              desc_forma:
                type: string
              nome_usuario:
                type: string
              limite_forma:
                type: number
              semaforo_forma:
                type: number
                description: Semáforo de crédito específico
            required:
              - cod_tpag
        outras_info:
          type: object
          properties:
            semaforo_credito:
              type: number
              description: Semáforo de crédito (números negativos bloqueiam venda)
            limite_credito:
              type: number
              description: Limite de crédito (R$)
            tpag_preferido:
              type: number
              description: Forma de pagamento preferida
            mensagem_inconsistente:
              type: string
              description: Inconsistência de cadastro (integração)
            dias_ciclagem:
              type: number
              description: Dias de Ciclo (CRM)
            isento_acrescimo:
              type: boolean
              description: Isenção de boleto
            credito_loja:
              type: boolean
        canal:
          type: string
        id_canal:
          type: number
          description: Canal por onde essa pessoa foi cadastrada
        id_vendedor:
          type: number
          description: 'ID do vendedor da carteira da pessoa. Se a pessoa fizer parte de mais de uma carteira, é o vendedor dono da carteira favorita dessa pessoa.'
        ativo:
          type: boolean
          description: Ativo/inativo
        observ_padrao:
          type: string
          description: Observações (padrão)
        observ_financeira:
          type: string
          description: Observações financeiras (visível somente para usuários autorizados)
        perfis:
          type: array
          uniqueItems: true
          description: Perfis da pessoa no sistema
          items:
            type: object
            properties:
              perfil:
                type: string
                minLength: 1
                enum:
                  - cliente
                  - almoxarifado
                  - colaborador
                  - comprador
                  - fornecedor
                  - representante
                  - vendedor
                  - transportadora
        data_cadastro:
          type: string
          minLength: 1
          description: ''
      required:
        - id
        - nome_razao
        - cpf_cnpj
        - pjuridica
        - categorias
        - config_formas
    Pessoa-Categoria:
      description: Cruzamento pessoa x categoria
      type: object
      x-examples:
        example-1:
          id: 5
          desc_categoria: ATACADO
          plu_id: 214
          categ_mae: null
      title: Pessoa Categoria
      properties:
        id:
          type: number
        desc_categoria:
          type: string
        plu_id:
          type: number
        categ_mae:
          type: number
          description: Também conhecido como a categoria pai (árvore hierárquica)
      required:
        - id
    Empresa:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 1
          nome_reduzido: VOLUNTARIOS
          sigla_loja: VLT
          id_pessoa: 9778001
          nome_razao: BELLER COMERCIO DE PAPEIS LTDA.
          nome_municipio: Porto Alegre
          uf: RS
          utiliza_pdv: true
          cnpj_padrao: 5563868000113
          loja_aberta: true
          id_canal: 49
          desc_canal: VLT
          lista_pedidos:
            - id_empresa: 1
              sigla: VLT
          id_predio: 5
      properties:
        id:
          type: number
        nome_reduzido:
          type: string
          maxLength: 20
          description: ''
        sigla_loja:
          type: string
          maxLength: 6
        id_pessoa:
          type: number
          description: ID da pessoa (geralmente jurídica) da empresa
        nome_razao:
          type: string
          description: Nome/Razão Social da pessoa da empresa
        nome_municipio:
          type: string
          description: Município do endereço-sede da pessoa da empresa
        uf:
          type: string
          description: UF do endereço-sede da pessoa da empresa
        utiliza_pdv:
          type: boolean
          description: Utiliza o aplicativo PDV (emite NFCe)
        cnpj_padrao:
          type: number
          description: 'Ao carregar um XML a empresa emitente é determinada por este campo, que é UNIQUE se preenchido.'
        loja_aberta:
          type: boolean
          description: Quando FALSE nenhum usuário pode fazer login nela.
        id_canal:
          type: number
          description: Canal padrão das vendas feitas por esta loja
        desc_canal:
          type: string
        lista_pedidos:
          type: array
          uniqueItems: true
          description: Lista (opcional) de outras empresas cujos pedidos serão visualizados juntamente com os pedidos dessa empresa
          items:
            type: object
            properties:
              id_empresa:
                type: number
              sigla:
                type: string
            required:
              - id_empresa
        id_predio:
          type: number
          description: 'Prédio do Estoque (vendas, separação, etc)'
      required:
        - id
        - nome_reduzido
        - sigla_loja
        - id_pessoa
        - utiliza_pdv
        - id_canal
        - lista_pedidos
    Marca-GET:
      description: ''
      type: object
      properties:
        id:
          type: number
        nome_marca:
          type: string
          minLength: 1
        marca_ativa:
          type: boolean
        produtos:
          type: number
      required:
        - id
        - nome_marca
        - marca_ativa
        - produtos
      x-examples:
        example-1:
          id: 5766
          nome_marca: REGISPEL
          marca_ativa: true
          produtos: 16
    Marca-PUT:
      description: ''
      type: object
      properties:
        id:
          type: number
        nome_marca:
          type: string
          minLength: 1
        marca_ativa:
          type: boolean
      required:
        - id
        - nome_marca
        - marca_ativa
      x-examples:
        example-1:
          id: 5766
          nome_marca: REGISPEL
          marca_ativa: true
    Predio-Estoque:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 7
          desc_predio: PADRE CHAGAS
          address_id: 1052519
          logradouro: Rua Padre Chagas
          numero: 52
          nome_municipio: Porto Alegre
          uf: RS
          empresas:
            - id: 7
              sigla_loja: PCH
          config_predio: {}
      properties:
        id:
          type: number
        desc_predio:
          type: string
          minLength: 1
        address_id:
          type: number
        logradouro:
          type: string
          minLength: 1
        numero:
          type: number
        nome_municipio:
          type: string
          minLength: 1
        uf:
          type: string
          minLength: 1
        empresas:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              id:
                type: number
              sigla_loja:
                type: string
                minLength: 1
        config_predio:
          type: object
        cdist:
          type: boolean
        legado:
          type: boolean
    Endereco:
      description: Endereço de uma pessoa
      type: object
      x-examples:
        example-1:
          id: 984115
          id_pessoa: 9778001
          id_endereco: 132189034
          id_tipo: 24
          desc_tipo: SEDE
          logradouro: RUA VOLUNTÁRIOS DA PÁTRIA
          numero: 547
          complemento: LOJA CASA DO PAPEL
          bairro: CENTRO HISTÓRICO
          cidade: Porto Alegre
          uf: RS
          cep: '90030003'
          cmun: 4314902
          sede: true
          ativo: true
          codigo_pais: 1058
          nome_pais: BRASIL
          sigla_loja: VLT
          nome_reduzido: VOLUNTARIOS
      properties:
        id:
          type: number
        id_pessoa:
          type: number
        id_endereco:
          type: number
          description: ID numérico do endereço no sistema legado (opcional)
        id_tipo:
          type: number
          description: ID do Tipo de endereço
        desc_tipo:
          type: string
          description: ID do Tipo de endereço
        logradouro:
          type: string
        numero:
          type: number
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        uf:
          type: string
        cep:
          type: string
          minLength: 8
          maxLength: 8
        cmun:
          type: number
          description: Código IBGE do Município
        sede:
          type: boolean
          description: Informar TRUE se for a SEDE da pessoa física ou jurídica
        ativo:
          type: boolean
        codigo_pais:
          type: number
        nome_pais:
          type: string
        sigla_loja:
          type: string
          description: 'Se for a sede de uma empresa (loja), traz a sigla'
        nome_reduzido:
          type: string
          description: 'Se for a sede de uma empresa (loja), traz o nome'
      required:
        - id_pessoa
        - id_tipo
        - logradouro
        - bairro
        - cep
        - cmun
        - sede
        - ativo
      title: ''
    SKU-Mapeamento:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 2150
          cnpj_fornec: 4402277000100
          cod_produto: 43091
          referencia: '930819'
          variacao: ''
          codigo_sku: 282
      properties:
        id:
          type: number
        cnpj_fornec:
          type: number
          description: CNPJ do fornecedor (emitente da NF)
        cod_produto:
          type: number
          description: Código do produto
        referencia:
          type: string
          minLength: 1
          description: Referência (tag cProd da NF)
        variacao:
          type: string
          description: Variação na descrição (pode estar em branco)
        codigo_sku:
          type: number
          description: Código do SKU deste produto
      required:
        - cnpj_fornec
        - cod_produto
        - referencia
        - variacao
    SKU-Configs:
      description: Configuração logística de um SKU
      type: object
      x-examples:
        example-1:
          id: 105840
          id_empresa: 7
          sigla_loja: XXX
          nome_reduzido: NOME FILIAL
          codigo_sku: 123456
          quant_mes: 278
          ticket_mes: 206
          valor_mes: 6606.44
          quant_natural: 278
          sazo_efet: 360
          expo: 1
          total_sazo: 1200
          cmmf_quant: 150
          cmmf_validade: '2022-02-11'
          ultima_venda: '2021-11-01'
          data_hora: '2021-11-04T00:13:46-03:00'
      properties:
        id:
          type: number
          default: 0
          example: 80095
        id_empresa:
          type: number
        sigla_loja:
          type: string
          minLength: 1
          readOnly: true
        nome_reduzido:
          type: string
          minLength: 1
          readOnly: true
        codigo_sku:
          type: number
          description: Código do produto SKU base
        dias_estoq:
          type: number
          description: Dias Com Estoque (DCE)  (Campo calculado / Somente Leitura)
          readOnly: true
        quant_mes:
          type: number
          description: CMM efetivo (CMM ou CMMF) - (Campo calculado / Somente Leitura)
          readOnly: true
        ticket_mes:
          type: number
          description: Quantidade de Tickets (ajustada) - (Campo calculado / Somente Leitura)
          readOnly: true
        valor_mes:
          type: number
          description: Valor Acumulado vendido - (Campo calculado / Somente Leitura)
          readOnly: true
        quant_natural:
          type: number
          description: CMM natural (calculado) - (Campo calculado / Somente Leitura)
          readOnly: true
        expo:
          type: number
          description: 'Exposição (EXPO), geralmente 1 ou 0'
        sazo_efet:
          type: number
          description: Sazonal efetivo (já com potência sazonal aplicada)
        total_sazo:
          type: number
          description: Sazonal 100% (SAZO)
        es_minimo:
          type: integer
          description: Estoque de Segurança Mínimo (por loja)
        cmmf_quant:
          type: number
        cmmf_validade:
          type: string
          minLength: 1
        ultima_venda:
          type: string
          minLength: 1
          readOnly: true
        data_hora:
          type: string
          minLength: 1
          readOnly: true
      required:
        - id
        - id_empresa
        - codigo_sku
    Pedido:
      description: Pedido/Orçamento
      type: object
      x-examples:
        example-1:
          origem: Amazon
          identificador: 701-0050622-3473402
          num_loja: 2
          id_pessoa: 36997002
          id_vendedor: 1176
          status: 590
          tipo: VENDAS
          mod_frete: '0'
          total: 673.74
          entrega:
            id_meio: 39
            id_endereco: 77907002
            data_entrega: '2021-11-19'
            nome_turno: MANHA
          observacoes: Sem cebola
          itens:
            - seq: 1
              idprod: 120464
              qcom: 6
              vuncom: 112.29
              vdesc: 0
              vprod: 673.74
          pagtos:
            - parcela: 1
              valor: 673.74
              data_parcela: '2021-12-10'
              tpintegra: 1
              tpag: 15
              extra:
                dias_prazo: 28
                id_conta: 0
          flags:
            usuario_legado: ZEZINHO
      title: ''
      properties:
        origem:
          type: string
          description: ERP externo/Marketplace de origem
        identificador:
          type: string
          description: Identificador do pedido no ERP externo/Marketplace
        num_loja:
          type: number
          description: ID da empresa (loja) do pedido
        id_pessoa:
          type: number
          description: ID da pessoa (cliente) do pedido
        id_vendedor:
          type: number
          description: 'ID do vendedor '
        status:
          type: number
          description: Status inicial do pedido
          default: 500
        tipo:
          type: string
          default: VENDAS
          description: Tipo de operação do pedido
        mod_frete:
          type: string
          description: Modalidade do frete (tag <modFrete> na NFe)
        total:
          type: number
        entrega:
          type: object
          properties:
            id_meio:
              type: number
              description: ID do meio de entrega
            id_endereco:
              type: number
              description: ID do endereço de entrega
            data_entrega:
              type: string
              description: Data prevista de entrega
            nome_turno:
              type: string
              description: Turno preferencial de entrega
        observacoes:
          type: string
        itens:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Pedido-Item'
        pagtos:
          type: array
          uniqueItems: true
          items:
            type: object
            properties:
              parcela:
                type: number
                description: Número sequencial da parcela (1/n)
              tpag:
                type: number
                description: Tipo de pagamento (tag <tPag> da NFe)
              valor:
                type: number
                description: Valor da parcela
              data_parcela:
                type: string
                description: Data de vencimento
              tpintegra:
                type: number
                description: Tipo de integração (tg <tpIntegra> da NFe)
              extra:
                type: object
                properties:
                  dias_prazo:
                    type: number
                    description: Dias de prazo (parcelamento)
                  id_conta:
                    type: number
                    description: ID da Conta Bancária (Cheque/Depósito)
            required:
              - parcela
              - tpag
              - valor
        flags:
          type: object
          properties:
            requer_separacao:
              type: boolean
      required:
        - num_loja
        - id_pessoa
        - flags
    Pedido-Item:
      description: Item de um pedido
      type: object
      x-examples:
        example-1:
          id: 6597129
          numero_pedido: 778495
          seq: 50
          idprod: 125896
          ucom: UN
          xprod: CADERNO COLEGIAL CD 01X1 80FL 177MMX240MM FORONI COLUMBIA
          qcom: 3
          vuncom: 0
          vprod: 0
      properties:
        id:
          type: number
          description: ID do item (para edição)
        numero_pedido:
          type: number
          description: Número do pedido
        seq:
          type: number
          description: Sequência do item no pedido
        idprod:
          type: number
          description: Código do produto
        ucom:
          type: string
          description: Unidade de comercialização
        xprod:
          type: string
          description: Descrição do item
        qcom:
          type: number
          description: Quantidade
        vuncom:
          type: number
          description: Valor unitário
        vdesc:
          type: number
        vprod:
          type: number
          description: Total do item
      required:
        - numero_pedido
        - idprod
    Classe-Fiscal:
      description: |
        Impostos por produto (ICMS, IPI, PIS e COFINS)

        Ver regra das prioridades do CFOP em: https://rednaxel.freshdesk.com/support/solutions/articles/47001200096-regras-do-cfop/preview
      type: object
      x-examples:
        example-1:
          id: 2
          id_tributo_fk: ICMS
          cst: 0
          desc_trib: TRIB. INTEGRAL
          cfop_nfce: 5102
          modbc: 3
          modbc_st: 4
          predbc_st: 100
          csosn: 102
          config_classe: {}
      properties:
        id:
          type: number
        id_tributo_fk:
          type: string
          minLength: 1
          example: ICMS
          description: 'Campo em conjunto como cst. Pode ser: ICMS, CSOSN, PIS, COFINS, IPI, ISSQN'
        cst:
          type: number
          description: Campo em conjunto com o id_tributo_fk
          example: 51
        desc_trib:
          type: string
          minLength: 1
        cfop_nfce:
          type: number
        modbc:
          type: number
        modbc_st:
          type: number
        predbc_st:
          type: number
        csosn:
          type: number
        config_classe:
          type: object
          properties:
            texto_legislacao:
              type: string
            nfe_cbenef:
              type: string
            sem_credito_pis_cofins:
              type: boolean
            cfop:
              type: integer
        csosn_manual:
          type: integer
        picms:
          type: number
        predbc:
          type: number
        cst_ipi:
          type: number
        cst_pis:
          type: number
        cst_cofins:
          type: number
      required:
        - id
        - id_tributo_fk
    Catalogo:
      description: Catálogo de categorias
      type: object
      x-examples:
        example-1:
          id: 21
          nome_catalogo: Taxonomia
          padrao: true
          eh_taxonomia: true
          ativo: true
      properties:
        id:
          type: number
        nome_catalogo:
          type: string
          minLength: 1
        padrao:
          type: boolean
          description: Somente um catálogo pode ser o padrão
        eh_taxonomia:
          type: boolean
          description: Quando um catálogo é do tipo Taxonomia suas categorias podem ser usadas na taxonomia dos produtos
        ativo:
          type: boolean
      required:
        - id
        - nome_catalogo
        - padrao
        - eh_taxonomia
        - ativo
    Categoria:
      description: Categoria de produto
      type: object
      x-examples:
        example-1:
          id: 10005
          nivel_categ: 1
          breadcrumb: Festas > Natal
          desc_categoria: Natal
          parent_id: 20929
          ativa: true
          id_catalogo: 27
      properties:
        id:
          type: number
        nivel_categ:
          type: number
          description: Nível na árvore (automático)
        breadcrumb:
          type: string
          minLength: 1
          description: Caminho desde a raiz
        desc_categoria:
          type: string
          minLength: 1
          description: Descrição
        parent_id:
          type: number
          description: ID da categoria da qual essa categoria é filha
        ativa:
          type: boolean
        id_catalogo:
          type: number
          description: ID do catálogo ao qual essa categoria pertence
      required:
        - desc_categoria
        - id_catalogo
  parameters:
    Filter:
      name: filter
      in: query
      required: false
      schema:
        type: string
      description: Filtros
    Range:
      name: range
      in: query
      required: true
      schema:
        type: array
        default:
          - 0
          - 9
      description: Paginação
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: array
        default:
          - id
          - DESC
      description: Ordenação
security:
  - Token de acesso: []
