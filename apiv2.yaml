openapi: 3.0.0
servers:
  - url: 'https://rnge.com.br:8091/v2'
    description: Produção
tags:
  - name: Autenticação
    description: Autenticação
  - name: Pedidos
    description: Pedidos
  - name: PDV
    description: Equipamento PDV
  - name: Distribuição
    description: Distribuição
info:
  description: |
    Esta API utiliza o padrão REST e autenticação HTTP AuthBasic (RFC 7617) em todos os recursos. O formato padrão de requisição e resposta é o JSON na maioria dos recursos; as exceções são os que trabalham com Notas Fiscais (XML) ou documentos para impressão (PDF).

    ## Autenticação

    Conforme a RFC 7617 [1], o cabeçalho *Authorization* é composto da palavra `Basic` seguida de um espaço e da string `username:password` codificada em base64.

    [1] RFC 7617, capítulo 2, em https://datatracker.ietf.org/doc/html/rfc7617#page-5

    Utilizamos essa autenticação de duas formas:
    - No `POST /login`, username = `usuario@tenant` e password = `senha`
    - Demais recursos, username = `user_id` e password = `token` (obtidos no login)

    Conforme a RFC 7617, o próprio aplicativo cliente deve se encarregar de fazer essa conversão.

    ## Definições

    **Tenant\:** Conta do cliente na Rednaxel. O tenant pode ter uma ou empresas que podem ser filiais (mesma raiz de CNPJ) ou não.

    **Usuário\:** Cada usuário pertence a um tenant e tem um `user_id` global e um `nome_usuario` único dentro do tenant.

    ## Padrões

    Todos os GET usam os parâmetros "filter", "sort" e "range" da seguinte forma:

     | Parâmetro  | Formato | URL Query                              | SQL equivalente       |
     |------------|---------|----------------------------------------|-----------------------|
     | filter     |   JSON  | GET v2/resources?filter={"store":34}   | ... WHERE store = 34  |
     | sort       |  CSV    | GET v2/resources?sort=\["name","ASC"\] | ... ORDER BY name asc |
     | range      |  CSV    | GET v2/resources?range=\[0,9\]         | ... OFFSET 0 LIMIT 10 |
  version: 2.0.0
  title: API do RNGE 4
  termsOfService: 'https://rednaxel.com/termos-de-uso'
  contact:
    name: Suporte
    email: suporte@rednaxel.com
    url: 'https://suporte.rednaxel.com'
  x-logo:
    url: 'https://storage.googleapis.com/rednaxel-dados/rednaxel-264.png'
    altText: Logo da Rednaxel
paths:
  /ping:
    get:
      summary: Verificando servidor
      tags:
        - Autenticação
      operationId: get-ping
      description: Verifica se o servidor está online
      security: []
      responses:
        '200':
          description: Sucesso
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    resp: OK
                properties:
                  resp:
                    type: string
                    minLength: 1
                    description: Resposta (OK)
                required:
                  - resp
              examples:
                JSON:
                  value:
                    resp: OK
    parameters: []
  /login:
    parameters: []
    post:
      summary: Efetuando login
      operationId: post-login
      responses:
        '200':
          description: Os campos `user_id` e `token` devem ser usados nas chamadas seguintes.
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: 1561144325
                    user_id: 10023
                    token: 89a1e75e-87da-400a-9899-7ca1a170667c
                    logo_color: '#404040'
                    font_color: '#FFFFFF'
                    homologacao: true
                properties:
                  id:
                    type: number
                    description: ID do login
                  user_id:
                    type: number
                    description: ID do Usuário
                  token:
                    type: string
                    description: Token de acesso
                  logo_color:
                    type: string
                    description: Cor de fundo (frontend)
                  font_color:
                    type: string
                    description: Cor da letra (frontend)
                  homologacao:
                    type: boolean
                    description: Servidor de homologação ou produção?
                required:
                  - user_id
                  - token
      parameters: []
      description: |
        Efetua o login com `usuario@tenant` e `senha` para obter UserID e Token. 
      security:
        - Usuário/Senha: []
      tags:
        - Autenticação
  /cashiers:
    get:
      tags:
        - PDV
      summary: Listando PDVs
      description: Lista de Equipamentos PDV de todas as lojas (companies) do tenant
      parameters:
        - name: filter
          in: query
          description: Filters for the query
          schema:
            type: string
        - name: range
          in: query
          description: Paging
          schema:
            type: array
            items:
              type: integer
        - schema:
            type: string
            default: Basic MTIzNDp1dWlkLXRva2Vu
          in: header
          name: Authorization
          required: true
          description: 'ID:TOKEN'
      operationId: get-cashiers
      responses:
        '200':
          description: OK
    post:
      tags:
        - PDV
      summary: Criando PDV
      description: Cria novo PDV
      operationId: post-cashiers
      responses:
        '200':
          description: OK
    parameters: []
  '/cashiers/{id}':
    get:
      tags:
        - PDV
      summary: Consultando um PDV
      description: Consulta PDV
      parameters:
        - schema:
            type: string
            default: Basic MTIzNDp1dWlkLXRva2Vu
          in: header
          description: 'ID:TOKEN'
          required: true
          name: Authorization
      operationId: getone-cashiers
      responses:
        '200':
          description: OK
    put:
      tags:
        - PDV
      summary: Atualizando um PDV
      description: Atualiza um PDV
      responses:
        '200':
          description: Success!
        '400':
          description: Error
      operationId: put-cashiers
    delete:
      tags:
        - PDV
      summary: Deletando um PDV
      description: Deleta um PDV
      responses:
        '200':
          description: Info about deleted POS
        '400':
          description: Error
      operationId: delete-cashiers
    parameters:
      - schema:
          type: integer
          minimum: 1
          default: 1
        name: id
        in: path
        required: true
        description: ID do PDV
  /orders:
    get:
      tags:
        - Pedidos
      summary: Listando pedidos
      description: Lista de pedidos
      parameters:
        - name: filter
          in: query
          description: |
            - ids_empresas: `integer[]`
            - id_destino: `integer`
            - meus_pedidos: `boolean`
            - dias: `integer`
          schema:
            type: object
        - name: range
          in: query
          description: Paginação
          schema:
            type: array
      operationId: get-orders
      responses:
        '200':
          description: OK
    post:
      tags:
        - Pedidos
      summary: Criando um novo pedido
      description: Cria um novo pedido
      operationId: post-orders
      responses:
        '200':
          description: OK
    parameters: []
  '/orders/{id}':
    put:
      tags:
        - Pedidos
      summary: Atualizando um pedido
      description: Atualiza pedido
      operationId: put-orders
      responses:
        '200':
          description: OK
    get:
      tags:
        - Pedidos
      summary: Consultando um pedido
      description: Consulta pedido
      operationId: getone-orders
      responses:
        '200':
          description: OK
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Número do Pedido
  /distributions:
    get:
      summary: Listando distribuições
      tags:
        - Distribuição
      operationId: get-distributions
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
            examples: {}
      description: Distribuição
      parameters:
        - schema:
            type: string
          in: query
          name: filter
        - schema:
            type: array
          in: query
          name: range
        - schema:
            type: array
          in: query
          name: sort
      responses:
        '200':
          description: OK
    post:
      summary: Criando uma nova distribuição
      operationId: post-distributions
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                ids_empresas:
                  type: array
                  description: Lista de empresas destino
                  items: {}
                numero_pedido:
                  type: integer
                  description: Nº do pedido que contém os itens que serão enviados
                tipo_distrib:
                  type: string
                  enum:
                    - NORMAL
                    - ABLOJA
                    - REVFND
                    - REVSNO
                  description: 'Tipo de distribuição (padrão: NORMAL)'
                gerar_pedidos:
                  type: boolean
                  description: 'Se TRUE, gera os pedidos após criar a distribuição'
                predio:
                  type: integer
                  description: 'Prédio de origem (padrão: CD)'
                codigo_sku:
                  type: integer
                  description: Código de um SKU para testes
                curva_minima_geral:
                  type: integer
                  description: Somente produtos desta curva para cima serão enviados
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
      parameters: []
      tags:
        - Distribuição
      description: Cria uma nova distribuição
      responses:
        '200':
          description: OK
    parameters: []
components:
  securitySchemes:
    Usuário/Senha:
      type: http
      scheme: basic
      description: 'Usuário, Conta(tenant) e senha, ex: admin@zezinho:zeus'
    ID/Token:
      type: http
      scheme: basic
      description: 'ID do usuário e token, ex: 12345:89a1e75e-87da'
security:
  - ID/Token: []
